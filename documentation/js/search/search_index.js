var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.084,1,2.296]],["body/classes/AllExceptionsFilter.html",[0,0.094,1,3.35,2,1.674,3,0.356,4,0.308,5,0.308,6,2.942,7,3.859,8,5.17,9,0.356,10,1.549,11,1.02,12,3.518,13,4.633,14,5.17,15,5.489,16,0.836,17,3.531,18,1.286,19,0.033,20,1.286,21,0.514,22,0.913,23,5.17,24,0.764,25,0.356,26,0.764,27,0.356,28,2.178,29,1.839,30,3.531,31,3.531,32,3.531,33,3.531,34,3.531,35,2.942,36,3.531,37,4.633,38,3.531,39,2.942,40,3.531,41,3.531,42,3.531,43,3.531,44,2.942,45,1.53,46,1.181,47,3.531,48,0.018,49,0.024,50,0.018]],["title/controllers/AppController.html",[51,1.375,52,2.035]],["body/controllers/AppController.html",[0,0.107,3,0.407,4,0.352,5,0.352,9,0.407,10,1.687,11,1.086,16,0.955,19,0.033,24,0.873,25,0.509,26,0.873,27,0.407,48,0.021,49,0.026,50,0.021,51,2.185,52,3.234,53,1.912,54,3.36,55,4.805,56,2.101,57,4.033,58,1.305,59,3.168,60,3.36,61,2.917,62,1.137,63,0.955,64,4.033]],["title/modules/AppModule.html",[65,1.26,66,2.035]],["body/modules/AppModule.html",[0,0.095,3,0.361,4,0.312,5,0.312,19,0.033,25,0.578,26,0.775,27,0.361,48,0.018,49,0.024,50,0.018,52,2.997,53,1.698,59,2.69,60,2.983,65,2.066,66,3.888,67,1.698,68,1.865,69,2.295,70,2.295,71,1.865,72,2.69,73,2.06,74,2.983,75,2.983,76,3.378,77,3.378,78,2.997,79,2.295,80,2.295,81,3.581,82,3.381,83,3.581,84,3.581,85,3.581,86,3.581,87,3.581]],["title/injectables/AppService.html",[59,1.827,88,1.062]],["body/injectables/AppService.html",[0,0.113,3,0.427,4,0.369,5,0.369,9,0.427,10,1.738,11,1.11,16,1.003,19,0.033,24,0.916,25,0.427,26,0.916,27,0.427,48,0.022,49,0.027,50,0.022,55,4.888,58,1.345,59,2.991,63,1.003,88,1.738,89,2.436,90,3.527,91,4.234,92,4.234,93,4.234]],["title/classes/ArticleDto.html",[0,0.084,94,1.654]],["body/classes/ArticleDto.html",[0,0.121,2,1.629,3,0.347,4,0.3,5,0.3,9,0.347,11,1.229,16,1.286,19,0.033,21,0.79,25,0.459,27,0.347,48,0.018,49,0.023,50,0.018,56,2.828,58,1.501,94,2.37,95,2.862,96,1.398,97,2.935,98,2.657,99,2.418,100,1.858,101,1.657,102,3.436,103,3.436,104,4.25,105,3.436,106,3.436,107,3.436,108,4.524,109,4.55,110,2.485,111,4.706,112,2.203]],["title/modules/ArticleModule.html",[65,1.26,76,1.827]],["body/modules/ArticleModule.html",[0,0.096,3,0.364,4,0.315,5,0.315,19,0.033,25,0.579,26,0.78,27,0.364,48,0.019,49,0.024,50,0.019,53,2.227,65,2.073,67,1.71,68,1.878,69,2.311,70,2.311,71,1.878,72,3.005,73,2.075,76,3.495,78,3.01,79,2.311,80,2.311,82,3.396,113,3.004,114,3.004,115,3.004,116,3.064,117,2.789,118,3.606,119,3.348,120,3.606,121,3.004,122,3.004,123,3.396,124,3.606]],["title/classes/BaseController.html",[0,0.084,125,1.827]],["body/classes/BaseController.html",[0,0.08,2,1.423,3,0.303,4,0.262,5,0.262,9,0.303,10,1.389,11,1.167,16,1.277,18,1.87,19,0.033,20,1.87,21,0.785,22,1.329,24,1.03,25,0.303,26,0.65,27,0.303,48,0.015,49,0.021,50,0.015,51,2.336,56,2.479,62,1.342,63,0.984,96,1.275,125,2.389,126,2.501,127,2.062,128,2.163,129,2.062,130,1.889,131,1.512,132,1.563,133,2.662,134,4.152,135,4.152,136,1.423,137,3.442,138,3.002,139,1.968,140,2.171,141,2.501,142,3.002,143,1.799,144,2.171,145,3.002,146,3.442,147,1.389,148,2.171,149,1.093,150,1.563,151,3.002,152,2.171,153,3.002,154,2.171,155,3.002,156,2.171,157,2.171,158,3.002]],["title/classes/BaseModel.html",[0,0.084,159,1.26]],["body/classes/BaseModel.html",[0,0.046,2,0.829,3,0.176,4,0.153,5,0.153,9,0.176,10,0.928,11,1.089,12,1.779,16,1.133,18,1.561,19,0.034,20,1.561,21,0.814,22,1.109,24,0.928,25,0.176,27,0.348,28,1.101,29,2.233,45,1.202,46,1.154,48,0.009,49,0.014,50,0.009,58,1.322,62,1.287,63,1.016,96,0.852,101,1.257,127,1.977,128,1.445,129,1.703,130,1.811,131,1.561,132,0.91,133,1.779,136,1.316,139,1.863,143,1.495,147,1.434,149,1.431,150,0.91,159,1.101,160,1.12,161,2.81,162,2.007,163,2.775,164,2.007,165,1.748,166,1.748,167,1.445,168,1.597,169,1.597,170,1.597,171,1.597,172,1.748,173,1.597,174,2.942,175,1.597,176,1.748,177,1.597,178,1.264,179,1.56,180,1.863,181,1.748,182,1.316,183,1.316,184,1.863,185,0.91,186,0.91,187,2.467,188,2.033,189,1.857,190,2.262,191,1.597,192,2.467,193,1.264,194,0.584,195,0.497,196,0.829,197,2.007,198,1.264,199,1.264,200,1.006,201,1.264,202,1.264,203,2.007,204,2.007,205,1.779,206,2.007,207,2.519,208,3.3,209,2.007,210,2.007,211,1.264,212,0.829,213,1.264,214,1.264,215,1.264,216,1.264]],["title/classes/Product.html",[0,0.084,217,1.654]],["body/classes/Product.html",[0,0.125,2,1.71,3,0.364,4,0.315,5,0.315,9,0.364,11,1.211,16,1.237,19,0.033,21,0.76,25,0.474,27,0.364,48,0.019,49,0.024,50,0.019,56,2.72,58,1.522,96,1.443,98,2.72,99,2.476,100,1.902,104,4.351,108,4.61,110,2.608,111,4.61,112,2.311,217,2.446,218,4.61,219,3.004,220,3.606,221,3.606,222,3.606]],["title/controllers/CustomController.html",[51,1.375,119,2.035]],["body/controllers/CustomController.html",[0,0.076,3,0.288,4,0.249,5,0.249,9,0.288,10,1.339,11,1.153,16,1.097,18,1.686,19,0.033,20,1.686,21,0.674,22,1.198,24,1.002,25,0.534,26,0.617,27,0.288,48,0.015,49,0.021,50,0.015,51,1.235,53,1.352,56,2.412,61,2.061,62,0.804,63,1.097,94,2.616,117,1.899,119,2.568,121,2.375,125,2.305,128,2.086,129,2.006,130,1.838,131,1.459,136,1.352,137,3.349,139,1.899,140,2.061,141,2.375,143,1.735,144,2.061,146,3.349,147,1.339,148,2.061,149,1.038,152,2.061,154,2.061,156,2.061,157,2.061,195,1.009,223,2.375,224,2.375,225,2.375,226,2.851,227,2.851,228,2.851,229,2.061,230,1.485,231,2.061,232,2.375,233,2.851,234,1.131,235,1.235,236,2.375,237,3.337,238,3.337,239,3.337,240,2.851,241,2.375,242,2.375]],["title/modules/DatabaseModule.html",[65,1.26,116,1.654]],["body/modules/DatabaseModule.html",[0,0.118,3,0.448,4,0.387,5,0.387,19,0.033,25,0.54,26,0.96,27,0.448,48,0.023,49,0.028,50,0.023,65,2.122,67,2.103,72,2.553,73,2.553,116,2.786,243,4.436,244,4.152,245,4.436]],["title/interfaces/IArticle.html",[195,0.568,230,1.654]],["body/interfaces/IArticle.html",[3,0.387,4,0.335,5,0.335,9,0.387,19,0.032,21,0.824,25,0.387,27,0.387,48,0.02,49,0.025,50,0.02,58,1.607,62,1.597,96,1.501,97,3.259,98,2.95,99,2.685,100,2.062,101,1.959,194,1.283,195,0.687,230,2.546,234,1.94,246,1.819,247,3.196,248,4.481]],["title/interfaces/IBaseModelCtxInterface.html",[180,1.505,195,0.568]],["body/interfaces/IBaseModelCtxInterface.html",[0,0.056,3,0.212,4,0.184,5,0.184,9,0.212,11,0.922,12,2.055,16,0.499,19,0.034,21,0.745,22,1.366,24,0.456,25,0.212,27,0.392,28,1.273,29,2.023,45,0.912,46,1.299,48,0.011,49,0.017,50,0.011,58,1.366,62,0.904,63,1.108,96,0.985,101,1.97,127,1.389,129,0.912,130,1.273,131,1.168,133,1.349,136,0.998,139,1.52,143,1.389,147,1.299,149,1.582,150,1.096,159,0.835,160,1.349,161,2.784,162,1.522,164,1.522,167,1.096,168,1.211,169,1.211,170,1.211,171,1.211,173,1.211,174,2.835,175,1.211,177,1.211,179,1.273,180,1.842,182,0.998,183,0.998,184,1.52,187,2.948,188,2.429,189,1.683,190,2.835,191,1.211,192,2.948,193,1.522,194,0.704,195,0.574,196,0.998,197,2.809,198,1.522,199,1.522,200,1.211,201,1.522,202,1.522,203,2.319,204,2.319,205,2.055,206,2.319,207,2.785,208,3.563,209,2.319,210,2.319,211,1.522,212,0.998,213,1.522,214,1.522,215,1.522,216,1.522,246,0.998,249,1.753,250,2.105]],["title/interfaces/IBaseModelParamsInterface.html",[179,1.26,195,0.568]],["body/interfaces/IBaseModelParamsInterface.html",[0,0.059,3,0.226,4,0.195,5,0.195,9,0.226,11,0.947,12,2.154,16,0.53,19,0.034,21,0.652,22,0.869,24,0.484,25,0.226,27,0.407,28,1.333,29,2.101,45,0.97,46,1.349,48,0.012,49,0.017,50,0.012,58,1.305,62,0.947,63,1.138,96,1.032,101,1.469,127,1.455,129,0.97,130,1.333,131,1.223,133,1.435,136,1.061,139,1.593,143,1.455,147,1.349,149,1.632,150,1.166,159,0.888,160,1.435,161,2.815,162,1.619,164,1.619,167,1.166,168,1.288,169,1.288,170,1.288,171,1.288,173,1.288,174,2.903,175,1.288,177,1.288,179,1.601,180,1.593,182,1.061,183,1.061,184,1.593,187,2.579,188,2.125,189,1.747,190,2.321,191,1.288,192,2.579,193,1.619,194,0.749,195,0.602,196,2.125,197,2.917,198,1.619,199,1.619,200,1.288,201,1.619,202,1.619,203,2.429,204,2.429,205,2.154,206,2.429,207,2.873,208,3.648,209,2.429,210,2.429,211,1.619,212,1.061,213,1.619,214,1.619,215,1.619,216,1.619,246,1.061,249,1.865,251,2.238]],["title/interfaces/IMongooseDefaults.html",[195,0.568,252,1.505]],["body/interfaces/IMongooseDefaults.html",[0,0.072,3,0.273,4,0.236,5,0.236,9,0.273,11,0.762,19,0.034,21,0.755,22,1.27,24,0.586,25,0.56,26,0.586,27,0.273,28,1.786,45,1.173,46,0.905,48,0.014,49,0.02,50,0.014,58,1.164,62,0.763,63,0.915,88,1.291,94,2.345,96,1.186,97,3.105,100,1.965,101,1.89,117,1.283,127,1.173,131,1.406,132,1.41,147,0.905,149,0.986,159,1.532,161,2.134,179,1.786,182,1.283,183,1.283,184,1.283,185,1.41,188,1.283,189,1.173,194,0.905,195,0.485,196,1.283,212,1.283,229,1.958,230,2.345,231,1.958,234,1.786,246,1.283,252,2.134,253,1.558,254,1.558,255,2.345,256,2.475,257,2.475,258,1.735,259,1.735,260,1.735,261,2.222,262,2.255,263,1.735,264,1.735,265,2.255,266,1.735,267,2.255,268,1.735,269,1.735,270,1.735,271,1.735,272,1.735,273,1.735,274,1.735,275,1.735,276,1.735,277,1.735,278,1.735,279,1.735]],["title/interfaces/IMongooseDefaults-1.html",[189,1.152,195,0.476,252,1.261]],["body/interfaces/IMongooseDefaults-1.html",[0,0.073,3,0.276,4,0.239,5,0.239,9,0.276,11,0.767,19,0.034,21,0.718,22,1.006,24,0.592,25,0.562,26,0.592,27,0.276,28,1.797,45,1.185,46,0.915,48,0.014,49,0.02,50,0.014,58,1.171,62,0.772,63,0.922,88,1.301,96,1.195,100,1.972,101,1.417,127,1.185,131,1.417,132,1.425,147,0.915,149,0.996,159,1.544,161,2.147,179,1.797,182,1.297,183,1.297,184,1.297,185,1.425,188,1.297,189,1.185,194,0.915,195,0.49,196,1.297,212,1.297,217,2.358,234,1.797,235,1.185,246,1.297,252,2.147,254,1.574,255,2.358,256,2.494,257,2.494,259,1.754,260,1.754,261,2.239,263,1.754,264,1.754,266,1.754,268,1.754,269,1.754,270,1.754,271,1.754,272,1.754,273,1.754,274,1.754,275,1.754,276,1.754,277,1.754,278,1.754,279,1.754,280,1.574,281,2.358,282,1.979,283,1.979,284,1.979,285,1.754,286,2.279,287,1.979,288,2.279]],["title/interfaces/IPost.html",[195,0.568,281,1.654]],["body/interfaces/IPost.html",[3,0.402,4,0.348,5,0.348,9,0.402,19,0.032,21,0.797,25,0.402,27,0.402,48,0.021,49,0.026,50,0.021,58,1.618,62,1.544,96,1.538,98,2.991,99,2.723,100,2.091,194,1.333,195,0.714,234,1.987,246,1.89,248,4.561,281,2.608,289,3.321]],["title/injectables/JoiValidationPipe.html",[88,1.062,290,2.035]],["body/injectables/JoiValidationPipe.html",[0,0.09,3,0.341,4,0.295,5,0.295,7,2.815,9,0.341,10,1.505,11,1.139,16,1.066,18,1.23,19,0.033,20,1.23,21,0.492,22,0.874,24,0.731,25,0.454,26,0.731,27,0.341,28,1.341,39,2.815,44,2.815,46,1.13,48,0.023,49,0.023,50,0.017,63,0.8,88,1.505,89,1.944,150,2.81,186,2.344,200,2.589,207,2.166,290,2.884,291,2.815,292,4.494,293,3.749,294,3.379,295,3.749,296,3.658,297,4.494,298,3.379,299,3.254,300,4.5,301,3.379,302,4.5,303,3.379,304,3.379,305,3.379,306,3.379,307,3.379,308,3.379,309,3.379,310,3.379,311,3.379,312,3.379,313,4.5,314,3.379]],["title/modules/ProductModule.html",[65,1.26,77,1.827]],["body/modules/ProductModule.html",[0,0.095,3,0.361,4,0.312,5,0.312,19,0.033,25,0.578,26,0.775,27,0.361,48,0.018,49,0.024,50,0.018,53,2.216,65,2.066,67,1.698,68,1.865,69,2.295,70,2.295,71,1.865,72,2.995,73,2.06,77,3.49,78,2.997,79,2.295,80,2.295,82,3.381,116,3.058,122,2.983,235,2.543,315,2.983,316,3.581,317,2.983,318,3.581,319,3.337,320,3.581,321,2.983,322,3.381,323,3.581]],["title/classes/ProductValidation.html",[0,0.084,324,2.035]],["body/classes/ProductValidation.html",[0,0.094,2,1.68,3,0.357,4,0.309,5,0.309,9,0.357,10,1.553,11,1.177,16,1.227,18,1.29,19,0.033,20,1.29,21,0.516,22,0.917,24,1.005,25,0.468,27,0.357,48,0.018,49,0.024,50,0.018,63,0.839,98,1.846,99,1.68,100,1.29,150,2.418,186,1.846,200,2.98,234,1.843,290,3.657,292,4.97,293,3.868,295,2.952,296,3.358,297,3.868,299,3.358,324,2.976,325,2.952,326,3.543,327,3.358,328,3.543,329,3.543,330,3.543,331,3.543,332,3.543,333,4.643]],["title/controllers/PostsController.html",[51,1.375,319,2.035]],["body/controllers/PostsController.html",[0,0.065,3,0.248,4,0.214,5,0.214,9,0.248,10,1.203,11,1.112,16,1.008,18,1.55,19,0.033,20,1.55,21,0.62,22,1.101,24,0.921,25,0.544,26,0.531,27,0.248,35,2.996,48,0.013,49,0.019,50,0.013,51,1.063,53,1.163,56,2.217,61,1.774,62,0.692,63,1.008,99,2.018,112,1.573,125,2.069,128,2.442,129,2.162,130,1.69,131,1.707,137,2.601,140,1.774,143,1.558,144,1.774,146,3.079,147,1.203,148,1.774,149,0.893,152,1.774,154,1.774,156,1.774,157,1.774,195,0.965,217,2.717,224,2.044,232,2.044,234,0.974,235,1.844,236,2.044,237,3.547,238,3.547,239,3.547,241,2.044,242,2.044,281,1.278,282,1.774,283,1.774,284,1.774,287,1.774,319,2.305,321,2.044,324,2.305,334,2.044,335,5.216,336,2.453,337,2.453,338,2.453,339,3.596,340,3.596,341,3.596,342,3.596,343,2.453,344,2.453,345,2.453,346,2.453,347,2.453,348,2.453,349,2.453,350,2.453,351,4.688,352,3.596,353,2.453,354,2.453,355,2.453,356,2.044,357,2.453]],["title/injectables/PostsService.html",[88,1.062,235,1.375]],["body/injectables/PostsService.html",[0,0.053,3,0.2,4,0.173,5,0.173,9,0.2,10,1.024,11,1.071,16,1.188,18,1.657,19,0.033,20,1.657,21,0.817,22,1.177,24,0.985,25,0.506,26,0.429,27,0.2,28,1.485,29,1.595,45,1.327,46,0.663,48,0.01,49,0.016,50,0.01,58,1.177,62,1.283,63,0.725,88,1.024,89,1.14,96,0.941,100,1.363,101,1.115,127,1.971,128,1.595,129,1.621,130,1.671,131,1.657,132,1.595,136,0.94,139,1.452,143,0.859,147,1.252,149,0.722,159,2.11,161,2.621,167,1.032,168,1.14,169,1.14,170,1.14,171,1.14,173,1.14,174,2.154,175,1.14,177,1.14,178,1.433,179,1.671,180,1.452,182,1.452,183,1.452,184,1.774,185,1.595,186,1.032,187,1.14,188,1.452,189,1.621,190,1.14,191,1.14,192,1.14,194,0.663,195,0.355,196,0.94,212,0.94,217,1.949,234,1.485,235,1.327,252,1.452,254,1.14,255,1.949,256,1.963,257,1.963,259,1.27,260,1.27,261,1.762,263,1.963,264,1.27,266,1.27,268,1.27,269,1.27,270,1.27,271,1.27,272,1.27,273,1.27,274,1.27,275,1.27,276,1.27,277,1.27,278,1.27,279,1.27,280,1.14,281,1.949,282,1.433,283,1.433,284,1.433,285,1.27,286,1.651,287,1.433,288,1.651,327,3.479,358,1.651,359,1.982,360,1.651,361,1.651,362,1.651,363,1.651,364,1.651,365,1.651]],["title/injectables/Service.html",[88,1.062,117,1.505]],["body/injectables/Service.html",[0,0.049,3,0.187,4,0.162,5,0.162,9,0.187,10,0.973,11,1.118,16,1.234,18,1.782,19,0.033,20,1.782,21,0.825,22,1.266,24,1.059,25,0.494,26,0.402,27,0.187,28,1.424,29,1.515,45,1.555,46,0.621,48,0.01,49,0.015,50,0.01,58,1.142,62,1.245,63,0.689,88,0.973,89,1.068,94,2.299,96,0.894,97,2.065,100,1.307,101,1.307,117,1.379,127,1.912,128,2.116,129,1.555,130,1.612,131,1.845,132,1.515,136,0.88,139,1.379,143,0.804,147,1.2,149,0.676,159,2.068,161,2.618,167,0.967,168,1.068,169,1.068,170,1.068,171,1.068,173,1.068,174,2.065,175,1.068,177,1.068,178,1.342,179,1.612,180,1.379,182,1.701,183,1.701,184,1.926,185,1.515,186,1.515,187,1.068,188,1.379,189,1.555,190,1.068,191,1.068,192,1.068,194,0.621,195,0.332,196,0.88,212,0.88,229,1.342,230,2.116,231,1.342,234,1.424,252,1.379,253,1.068,254,1.068,255,1.869,256,1.865,257,1.865,258,1.19,259,1.19,260,1.19,261,2.338,262,1.546,263,1.865,264,1.19,265,2.424,266,1.19,267,1.546,268,1.19,269,1.19,270,1.19,271,1.19,272,1.19,273,1.19,274,1.19,275,1.19,276,1.19,277,1.19,278,1.19,279,1.19,327,3.386,358,1.546,360,1.546,361,1.546,362,1.546,363,1.546,364,1.546,365,1.546,366,1.856,367,1.856,368,1.856,369,1.856]],["title/coverage.html",[370,3.12]],["body/coverage.html",[0,0.14,1,1.831,5,0.221,6,2.11,19,0.033,21,0.369,46,0.847,48,0.013,49,0.019,50,0.013,51,1.878,52,1.623,54,2.11,59,1.457,71,1.319,88,1.592,90,2.11,94,1.319,95,2.11,117,1.201,119,1.623,123,1.831,125,1.457,126,2.11,159,1.005,160,2.779,167,1.917,179,1.005,180,1.201,195,0.944,217,1.319,218,2.11,219,2.11,223,2.11,230,1.319,235,1.097,244,1.831,247,2.11,252,1.745,253,2.495,258,1.623,280,2.495,281,1.319,285,1.623,289,2.11,290,1.623,291,2.11,319,1.623,322,1.831,324,1.623,325,2.11,334,2.11,370,1.831,371,2.533,372,2.533,373,2.533,374,2.11,375,5.851,376,6.368,377,5.971,378,5.056,379,2.11,380,2.11,381,3.681,382,3.965,383,2.11,384,2.11,385,2.11,386,2.533,387,4.336,388,3.681,389,4.336,390,5.056,391,2.11,392,2.533,393,2.11,394,2.11,395,2.11,396,2.11,397,2.11,398,2.533,399,2.533]],["title/dependencies.html",[68,1.986,400,2.66]],["body/dependencies.html",[0,0.13,19,0.033,26,0.827,48,0.02,49,0.025,50,0.02,68,1.991,110,2.764,112,2.45,194,1.278,255,1.991,296,2.764,299,2.764,401,4.876,402,3.822,403,3.822,404,3.822,405,3.822,406,3.822,407,3.822,408,4.876,409,3.822,410,3.822,411,3.822,412,3.822,413,3.822,414,3.822,415,3.822,416,4.876,417,3.822,418,3.822,419,3.822,420,3.822,421,3.822,422,3.822,423,3.822,424,3.822,425,3.822,426,3.822,427,3.822,428,3.822,429,3.822,430,3.822,431,3.822,432,3.184]],["title/miscellaneous/functions.html",[433,1.386,434,3.177]],["body/miscellaneous/functions.html",[9,0.453,18,1.637,19,0.032,20,1.637,22,1.163,24,1.167,48,0.023,49,0.028,50,0.023,71,3.008,147,1.503,379,3.745,380,4.491,385,3.745,433,2.341,434,3.745,435,4.495,436,4.495,437,4.495,438,3.745,439,4.495]],["title/index.html",[9,0.268,440,2.66,441,2.66]],["body/index.html",[4,0.297,19,0.032,48,0.018,49,0.023,50,0.018,356,2.834,370,2.46,432,2.834,438,2.834,442,3.402,443,3.402,444,4.52,445,3.402,446,3.402,447,3.402,448,3.402,449,3.402,450,3.402,451,3.402,452,3.402,453,3.402,454,5.076,455,3.402,456,3.402,457,3.402,458,5.076,459,5.906,460,3.402,461,3.402,462,3.402,463,5.788,464,3.402,465,3.402,466,4.52,467,3.402,468,3.402,469,3.402,470,5.076,471,3.402,472,4.52,473,3.402,474,3.402,475,3.402,476,3.765,477,4.52,478,4.52,479,3.402,480,3.402,481,3.402,482,3.402,483,3.402,484,3.402,485,3.402,486,3.402,487,3.402,488,3.402,489,3.402,490,3.402,491,3.402,492,3.402,493,3.402,494,3.402,495,3.402,496,3.402,497,3.402,498,3.402,499,3.402,500,3.402,501,3.402]],["title/modules.html",[67,2.046]],["body/modules.html",[19,0.028,48,0.024,49,0.028,50,0.024,66,2.933,67,2.169,76,2.633,77,2.633,116,2.383,476,4.847,502,5.818,503,5.818,504,6.023,505,4.575,506,4.575]],["title/overview.html",[507,3.595]],["body/overview.html",[2,1.805,19,0.032,48,0.02,49,0.025,50,0.02,53,1.805,65,1.511,66,3.826,67,1.805,68,1.983,69,2.441,70,2.441,71,1.983,72,2.191,73,2.191,74,3.172,75,3.172,76,3.491,77,3.491,78,3.118,79,2.441,80,2.441,89,2.191,113,3.172,114,3.172,115,3.172,116,2.942,117,2.541,235,2.322,246,1.805,315,3.172,317,3.172,507,3.172,508,4.864,509,3.808,510,4.864]],["title/miscellaneous/typealiases.html",[433,1.386,511,3.814]],["body/miscellaneous/typealiases.html",[9,0.479,19,0.029,21,0.691,48,0.024,49,0.029,50,0.024,253,2.731,261,3.507,280,2.731,433,2.472,512,4.746,513,3.953,514,3.953]],["title/miscellaneous/variables.html",[433,1.386,515,3.177]],["body/miscellaneous/variables.html",[9,0.243,19,0.034,21,0.869,46,1.188,48,0.012,49,0.018,50,0.012,58,1.423,63,0.572,97,1.388,98,1.85,99,1.684,100,1.294,101,0.879,123,2.569,130,0.958,185,3.016,186,3.016,194,0.807,205,1.547,225,2.01,244,2.569,253,1.388,254,2.044,255,1.85,258,2.703,280,1.388,285,2.703,322,2.569,374,2.01,382,2.01,383,2.96,384,4.13,391,2.01,393,2.01,394,3.513,395,2.01,396,2.01,397,3.513,433,1.257,513,2.01,514,2.01,515,2.01,516,4.651,517,2.413,518,2.413,519,2.413,520,2.413,521,2.413,522,2.413,523,2.413,524,2.413,525,2.413,526,4.216,527,4.216,528,4.651,529,2.413,530,3.553,531,2.413,532,5.616,533,5.185,534,3.553,535,3.553,536,3.553,537,3.553,538,2.413,539,2.413,540,2.413,541,2.413,542,2.413]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":376,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":427,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":410,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":411,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":377,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":378,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":381,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":390,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":389,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":386,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":189,"title":{"interfaces/IMongooseDefaults-1.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["1.7.4",{"_index":413,"title":{},"body":{"dependencies.html":{}}}],["14.3.1",{"_index":423,"title":{},"body":{"dependencies.html":{}}}],["2.6.2",{"_index":429,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":342,"title":{},"body":{"controllers/PostsController.html":{}}}],["3",{"_index":509,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":408,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":420,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":191,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["4",{"_index":508,"title":{},"body":{"overview.html":{}}}],["4.16.4",{"_index":417,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":424,"title":{},"body":{"dependencies.html":{}}}],["4/8",{"_index":388,"title":{},"body":{"coverage.html":{}}}],["5.4.0",{"_index":401,"title":{},"body":{"dependencies.html":{}}}],["5.4.19",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":392,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":387,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["6",{"_index":510,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":404,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":407,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":431,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":415,"title":{},"body":{"dependencies.html":{}}}],["abstract",{"_index":150,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{}}}],["aliases",{"_index":512,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["amazing",{"_index":484,"title":{},"body":{"index.html":{}}}],["angular",{"_index":453,"title":{},"body":{"index.html":{}}}],["any).promise",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apimodelproperty",{"_index":111,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{}}}],["apioperation",{"_index":351,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiresponse",{"_index":352,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiusetags",{"_index":350,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiusetags(\"posts",{"_index":353,"title":{},"body":{"controllers/PostsController.html":{}}}],["app",{"_index":438,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":52,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":450,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":66,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":59,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{}}}],["argumentmetadata",{"_index":297,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{}}}],["argumentshost",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["article",{"_index":225,"title":{},"body":{"controllers/CustomController.html":{},"miscellaneous/variables.html":{}}}],["article.controller",{"_index":120,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.providers",{"_index":124,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.service",{"_index":121,"title":{},"body":{"modules/ArticleModule.html":{},"controllers/CustomController.html":{}}}],["article_model_provider",{"_index":258,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["articleconnectiontoken",{"_index":522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articledto",{"_index":94,"title":{"classes/ArticleDto.html":{}},"body":{"classes/ArticleDto.html":{},"controllers/CustomController.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["articlemodule",{"_index":76,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articlenumber",{"_index":97,"title":{},"body":{"classes/ArticleDto.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["articleprovider",{"_index":123,"title":{},"body":{"modules/ArticleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["articleschema",{"_index":394,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":279,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["async",{"_index":130,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":494,"title":{},"body":{"index.html":{}}}],["available",{"_index":506,"title":{},"body":{"modules.html":{}}}],["await",{"_index":205,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":485,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":301,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["basecontroller",{"_index":125,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["basemodel",{"_index":159,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["basemodel:19",{"_index":364,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["basemodel:20",{"_index":365,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["basemodel:32",{"_index":360,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["basemodel:42",{"_index":362,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["basemodel:67",{"_index":363,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["basemodel:83",{"_index":361,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["bash",{"_index":458,"title":{},"body":{"index.html":{}}}],["body",{"_index":148,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["bootstrap",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":504,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":502,"title":{},"body":{"modules.html":{}}}],["building",{"_index":445,"title":{},"body":{"index.html":{}}}],["buildschema",{"_index":292,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{}}}],["cat_model_provider",{"_index":383,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catconnectiontoken",{"_index":523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"classes/PostValidation.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"classes/PostValidation.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":113,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_imports",{"_index":114,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_providers",{"_index":115,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":315,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_imports",{"_index":316,"title":{},"body":{"modules/PostModule.html":{}}}],["cluster_postmodule_providers",{"_index":317,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["compression",{"_index":412,"title":{},"body":{"dependencies.html":{}}}],["connection",{"_index":528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model(\"article",{"_index":529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model(\"post",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["constants",{"_index":259,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["constructor(controller",{"_index":134,"title":{},"body":{"classes/BaseController.html":{}}}],["constructor(data",{"_index":162,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["constructor(postmodel",{"_index":358,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["constructor(private",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["content",{"_index":98,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IPost.html":{},"classes/PostValidation.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":51,"title":{"controllers/AppController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}},"body":{"controllers/AppController.html":{},"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["controller(\"article",{"_index":233,"title":{},"body":{"controllers/CustomController.html":{}}}],["controller(\"posts",{"_index":354,"title":{},"body":{"controllers/PostsController.html":{}}}],["controllers",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"controllers/CustomController.html":{},"modules/PostModule.html":{},"controllers/PostsController.html":{},"overview.html":{}}}],["correct",{"_index":271,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["coverage",{"_index":370,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":128,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["create(@body",{"_index":152,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["create(createpostdto",{"_index":287,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["create(value",{"_index":265,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["create(values",{"_index":136,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["created",{"_index":341,"title":{},"body":{"controllers/PostsController.html":{}}}],["createdat",{"_index":184,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["createdpost",{"_index":266,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["createpostdto",{"_index":217,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["creates",{"_index":168,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["createswagger",{"_index":380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctx",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["ctx.getrequest",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["customcontroller",{"_index":119,"title":{"controllers/CustomController.html":{}},"body":{"modules/ArticleModule.html":{},"controllers/CustomController.html":{},"coverage.html":{}}}],["data",{"_index":164,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["database",{"_index":170,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["database.providers",{"_index":245,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":122,"title":{},"body":{"modules/ArticleModule.html":{},"modules/PostModule.html":{}}}],["databasemodule",{"_index":116,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":244,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date().toisostring",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["db_provider",{"_index":384,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconnectiontoken",{"_index":524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["decorators",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["default",{"_index":185,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["delete",{"_index":129,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["delete(\":id",{"_index":156,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["delete(':id",{"_index":141,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{}}}],["delete(':id')@apioperation({title",{"_index":344,"title":{},"body":{"controllers/PostsController.html":{}}}],["delete(@param",{"_index":157,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["delete(id",{"_index":171,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["delete(params",{"_index":140,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["dependencies",{"_index":68,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descending",{"_index":182,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["description",{"_index":356,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["detail",{"_index":309,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["development",{"_index":462,"title":{},"body":{"index.html":{}}}],["document",{"_index":248,"title":{},"body":{"interfaces/IArticle.html":{},"interfaces/IPost.html":{}}}],["documentation",{"_index":371,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":414,"title":{},"body":{"dependencies.html":{}}}],["dto/article.dto",{"_index":229,"title":{},"body":{"controllers/CustomController.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["dto/create",{"_index":283,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["e2e",{"_index":473,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":446,"title":{},"body":{"index.html":{}}}],["error",{"_index":208,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["exception",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.tostring",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exec",{"_index":215,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["exports",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["express",{"_index":416,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":234,"title":{},"body":{"controllers/CustomController.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["failed",{"_index":312,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["false",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fastify",{"_index":406,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["found",{"_index":210,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["framework",{"_index":444,"title":{},"body":{"index.html":{}}}],["function",{"_index":167,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["functions",{"_index":434,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get()@apioperation({title",{"_index":346,"title":{},"body":{"controllers/PostsController.html":{}}}],["get(id",{"_index":175,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["gethello",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":440,"title":{"index.html":{}},"body":{}}],["global.promise",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":505,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":481,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":451,"title":{},"body":{"index.html":{}}}],["hello",{"_index":92,"title":{},"body":{"injectables/AppService.html":{}}}],["helmet",{"_index":421,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":491,"title":{},"body":{"index.html":{}}}],["host",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":302,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["https://nestjs.com",{"_index":498,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":303,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["httpstatus.bad_request",{"_index":313,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["iarticle",{"_index":230,"title":{"interfaces/IArticle.html":{}},"body":{"controllers/CustomController.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["ibasemodelctxinterface",{"_index":180,"title":{"interfaces/IBaseModelCtxInterface.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["ibasemodelparamsinterface",{"_index":179,"title":{"interfaces/IBaseModelParamsInterface.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["id",{"_index":174,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["identifier",{"_index":372,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["imongoosedefaults",{"_index":252,"title":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{}},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["imports",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":249,"title":{},"body":{"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["information",{"_index":177,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["inherited",{"_index":327,"title":{},"body":{"classes/PostValidation.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["inject",{"_index":254,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["inject(article_model_provider",{"_index":262,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["inject(post_model_provider",{"_index":286,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{}}}],["injectable",{"_index":88,"title":{"injectables/AppService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}},"body":{"injectables/AppService.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["injectables",{"_index":89,"title":{},"body":{"injectables/AppService.html":{},"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"overview.html":{}}}],["inspired",{"_index":452,"title":{},"body":{"index.html":{}}}],["install",{"_index":460,"title":{},"body":{"index.html":{}}}],["installation",{"_index":457,"title":{},"body":{"index.html":{}}}],["interface",{"_index":195,"title":{"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{}},"body":{"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["interface/article.interface",{"_index":231,"title":{},"body":{"controllers/CustomController.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["interface/post.interface",{"_index":282,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["interfaces",{"_index":246,"title":{},"body":{"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"overview.html":{}}}],["ipost",{"_index":281,"title":{"interfaces/IPost.html":{}},"body":{"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["isint",{"_index":109,"title":{},"body":{"classes/ArticleDto.html":{}}}],["isint()@apimodelproperty",{"_index":102,"title":{},"body":{"classes/ArticleDto.html":{}}}],["isnil",{"_index":257,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["isstring",{"_index":108,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{}}}],["isstring()@apimodelproperty",{"_index":104,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{}}}],["joi",{"_index":299,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"dependencies.html":{}}}],["joi.object",{"_index":331,"title":{},"body":{"classes/PostValidation.html":{}}}],["joi.string().required",{"_index":333,"title":{},"body":{"classes/PostValidation.html":{}}}],["joi.string().required().max(50",{"_index":332,"title":{},"body":{"classes/PostValidation.html":{}}}],["joi.validate(value",{"_index":305,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["join",{"_index":487,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":290,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"coverage.html":{}}}],["joivalidationpipe:22",{"_index":328,"title":{},"body":{"classes/PostValidation.html":{}}}],["joivalidationpipe:6",{"_index":329,"title":{},"body":{"classes/PostValidation.html":{}}}],["kamil",{"_index":495,"title":{},"body":{"index.html":{}}}],["legend",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["license",{"_index":501,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":478,"title":{},"body":{"index.html":{}}}],["limit",{"_index":419,"title":{},"body":{"dependencies.html":{}}}],["limit(perpage",{"_index":214,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["line",{"_index":239,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["list",{"_index":131,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["list(@query",{"_index":154,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["list(params",{"_index":178,"title":{},"body":{"classes/BaseModel.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["list(query",{"_index":144,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["list(undefined",{"_index":368,"title":{},"body":{"injectables/Service.html":{}}}],["lodash",{"_index":255,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":269,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["matching",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["metadata",{"_index":296,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["miscellaneous",{"_index":433,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":477,"title":{},"body":{"index.html":{}}}],["mode",{"_index":466,"title":{},"body":{"index.html":{}}}],["model",{"_index":161,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["model.remove",{"_index":216,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["model/controller",{"_index":232,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["model/model",{"_index":260,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["module",{"_index":65,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["module/article/article.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["module/post/post.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":67,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":194,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.connect(\"mongodb://bchurunway:node00bchurunway@128.199.64.153:27017/bchurunway",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schematypes.objectid",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":490,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":496,"title":{},"body":{"index.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":454,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":500,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":402,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":403,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":405,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":112,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"dependencies.html":{}}}],["new",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":238,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["node.js",{"_index":443,"title":{},"body":{"index.html":{}}}],["npm",{"_index":459,"title":{},"body":{"index.html":{}}}],["null",{"_index":308,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["number",{"_index":101,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseModel.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":200,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{}}}],["object.save",{"_index":202,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["omitby",{"_index":256,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["open",{"_index":479,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":196,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["order",{"_index":183,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["out",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["overview",{"_index":507,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":278,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["package",{"_index":400,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":192,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["param",{"_index":149,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":143,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["path",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["perpage",{"_index":190,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["pipetransform",{"_index":300,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["please",{"_index":488,"title":{},"body":{"index.html":{}}}],["post",{"_index":137,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["post()@usepipes(new",{"_index":336,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.controller",{"_index":320,"title":{},"body":{"modules/PostModule.html":{}}}],["post.dto",{"_index":284,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["post.dto.ts",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:11",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:15",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:7",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.providers",{"_index":323,"title":{},"body":{"modules/PostModule.html":{}}}],["post.service",{"_index":321,"title":{},"body":{"modules/PostModule.html":{},"controllers/PostsController.html":{}}}],["post_model_provider",{"_index":285,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postconnectiontoken",{"_index":525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postmodel",{"_index":263,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["postmodule",{"_index":77,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["posts",{"_index":335,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts'})@apiresponse({description",{"_index":338,"title":{},"body":{"controllers/PostsController.html":{}}}],["postschema",{"_index":397,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["postscontroller",{"_index":319,"title":{"controllers/PostsController.html":{}},"body":{"modules/PostModule.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["postsproviders",{"_index":322,"title":{},"body":{"modules/PostModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postsservice",{"_index":235,"title":{"injectables/PostsService.html":{}},"body":{"controllers/CustomController.html":{},"interfaces/IMongooseDefaults-1.html":{},"modules/PostModule.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["postvalidation",{"_index":324,"title":{"classes/PostValidation.html":{}},"body":{"classes/PostValidation.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["postvalidation())@apioperation({title",{"_index":337,"title":{},"body":{"controllers/PostsController.html":{}}}],["prefix",{"_index":224,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["private",{"_index":127,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["production",{"_index":468,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":442,"title":{},"body":{"index.html":{}}}],["project",{"_index":480,"title":{},"body":{"index.html":{}}}],["promise",{"_index":147,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":96,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["propname",{"_index":197,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["protected",{"_index":133,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["provide",{"_index":526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["public",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["query",{"_index":146,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["rate",{"_index":418,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":489,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["record",{"_index":339,"title":{},"body":{"controllers/PostsController.html":{}}}],["ref",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":426,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":272,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["repository",{"_index":456,"title":{},"body":{"index.html":{}}}],["request",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["request.url",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["require",{"_index":531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}],["response",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response.status(500).json",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["result",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.error",{"_index":307,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["result.error.message.replace(/\"/g",{"_index":310,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["result.value",{"_index":314,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["results",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":428,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":463,"title":{},"body":{"index.html":{}}}],["running",{"_index":461,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":430,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":447,"title":{},"body":{"index.html":{}}}],["server",{"_index":448,"title":{},"body":{"index.html":{}}}],["service",{"_index":117,"title":{"injectables/Service.html":{}},"body":{"modules/ArticleModule.html":{},"controllers/CustomController.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{},"overview.html":{}}}],["side",{"_index":449,"title":{},"body":{"index.html":{}}}],["skip",{"_index":274,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["skip(perpage",{"_index":213,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["skipped",{"_index":276,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["sort",{"_index":212,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["sortby",{"_index":187,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["sorttype",{"_index":188,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"modules/DatabaseModule.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"index.html":{}}}],["sponsors",{"_index":483,"title":{},"body":{"index.html":{}}}],["src/.../article.providers.ts",{"_index":517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article.schema.ts",{"_index":518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article.service.ts",{"_index":513,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.providers.ts",{"_index":521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product.schema.ts",{"_index":520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product.service.ts",{"_index":514,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":54,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:10",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":90,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":91,"title":{},"body":{"injectables/AppService.html":{}}}],["src/constants.ts",{"_index":382,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":243,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":374,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/errors.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/middleware/errors.filter.ts:5",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/middleware/swagger.ts",{"_index":379,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/article/article.controller.ts",{"_index":223,"title":{},"body":{"controllers/CustomController.html":{},"coverage.html":{}}}],["src/module/article/article.controller.ts:15",{"_index":226,"title":{},"body":{"controllers/CustomController.html":{}}}],["src/module/article/article.controller.ts:21",{"_index":228,"title":{},"body":{"controllers/CustomController.html":{}}}],["src/module/article/article.controller.ts:26",{"_index":227,"title":{},"body":{"controllers/CustomController.html":{}}}],["src/module/article/article.module.ts",{"_index":118,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/module/article/article.providers.ts",{"_index":391,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/article/article.service.ts",{"_index":253,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/module/article/article.service.ts:19",{"_index":366,"title":{},"body":{"injectables/Service.html":{}}}],["src/module/article/article.service.ts:26",{"_index":367,"title":{},"body":{"injectables/Service.html":{}}}],["src/module/article/article.service.ts:37",{"_index":369,"title":{},"body":{"injectables/Service.html":{}}}],["src/module/article/dto/article.dto.ts",{"_index":95,"title":{},"body":{"classes/ArticleDto.html":{},"coverage.html":{}}}],["src/module/article/dto/article.dto.ts:11",{"_index":106,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/dto/article.dto.ts:15",{"_index":105,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/dto/article.dto.ts:19",{"_index":107,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/dto/article.dto.ts:7",{"_index":103,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/interface/article.interface.ts",{"_index":247,"title":{},"body":{"interfaces/IArticle.html":{},"coverage.html":{}}}],["src/module/article/schema/article.schema.ts",{"_index":393,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/model/controller.ts",{"_index":126,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/module/model/controller.ts:11",{"_index":138,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/controller.ts:16",{"_index":145,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/controller.ts:21",{"_index":142,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/controller.ts:4",{"_index":135,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/model.ts",{"_index":160,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"coverage.html":{}}}],["src/module/model/model.ts:13",{"_index":250,"title":{},"body":{"interfaces/IBaseModelCtxInterface.html":{}}}],["src/module/model/model.ts:19",{"_index":165,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:20",{"_index":163,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:32",{"_index":166,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:4",{"_index":251,"title":{},"body":{"interfaces/IBaseModelParamsInterface.html":{}}}],["src/module/model/model.ts:42",{"_index":176,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:67",{"_index":181,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:83",{"_index":172,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/post/dto/create",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/module/post/interface/product.interface.ts",{"_index":289,"title":{},"body":{"interfaces/IPost.html":{},"coverage.html":{}}}],["src/module/post/product.controller.ts",{"_index":334,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/module/post/product.controller.ts:25",{"_index":343,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/module/post/product.controller.ts:32",{"_index":347,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/module/post/product.controller.ts:39",{"_index":345,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/module/post/product.module.ts",{"_index":318,"title":{},"body":{"modules/PostModule.html":{}}}],["src/module/post/product.providers.ts",{"_index":395,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/post/product.service.ts",{"_index":280,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/module/post/product.service.ts:18",{"_index":359,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/module/post/schema/product.schema.ts",{"_index":396,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/post/validation/product.validation.ts",{"_index":325,"title":{},"body":{"classes/PostValidation.html":{},"coverage.html":{}}}],["src/module/post/validation/product.validation.ts:6",{"_index":326,"title":{},"body":{"classes/PostValidation.html":{}}}],["src/validation/validation.pipe.ts",{"_index":291,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/validation/validation.pipe.ts:22",{"_index":294,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/validation/validation.pipe.ts:6",{"_index":298,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["stack",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["start",{"_index":464,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":467,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":469,"title":{},"body":{"index.html":{}}}],["started",{"_index":441,"title":{"index.html":{}},"body":{}}],["starter",{"_index":455,"title":{},"body":{"index.html":{}}}],["statements",{"_index":373,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/PostsController.html":{}}}],["statuscode",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["stay",{"_index":492,"title":{},"body":{"index.html":{}}}],["store",{"_index":169,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["string",{"_index":58,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/ArticleDto.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":340,"title":{},"body":{"controllers/PostsController.html":{}}}],["super(postmodel",{"_index":264,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["super(postsservice",{"_index":236,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["super.create(createdpost",{"_index":273,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["super.create(createpostdto",{"_index":357,"title":{},"body":{"controllers/PostsController.html":{}}}],["super.create(values",{"_index":240,"title":{},"body":{"controllers/CustomController.html":{}}}],["super.delete(params.id",{"_index":242,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["super.list(options",{"_index":277,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["super.list(query",{"_index":241,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["support",{"_index":476,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":270,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["svg",{"_index":503,"title":{},"body":{"modules.html":{}}}],["table",{"_index":399,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":398,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":470,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":475,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":474,"title":{},"body":{"index.html":{}}}],["tests",{"_index":472,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":482,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":64,"title":{},"body":{"controllers/AppController.html":{}}}],["this.buildschema",{"_index":306,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["this.controller",{"_index":151,"title":{},"body":{"classes/BaseController.html":{}}}],["this.controller.create(values",{"_index":153,"title":{},"body":{"classes/BaseController.html":{}}}],["this.controller.delete(params.id",{"_index":158,"title":{},"body":{"classes/BaseController.html":{}}}],["this.controller.list(query",{"_index":155,"title":{},"body":{"classes/BaseController.html":{}}}],["this.model",{"_index":198,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model(values",{"_index":201,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model.find(params",{"_index":211,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model.findbyid(id).exec",{"_index":206,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model.modelname",{"_index":209,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.postmodel(createpostdto",{"_index":288,"title":{},"body":{"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{}}}],["this.postmodel(value",{"_index":267,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["this.type",{"_index":199,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["throw",{"_index":207,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{}}}],["timestamp",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["timestamps",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":99,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IPost.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":493,"title":{},"body":{"index.html":{}}}],["tprops",{"_index":261,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/typealiases.html":{}}}],["transform",{"_index":293,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{}}}],["transform(value",{"_index":295,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{}}}],["transformer",{"_index":409,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":203,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["ts",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["tslint:disable",{"_index":237,"title":{},"body":{"controllers/CustomController.html":{},"controllers/PostsController.html":{}}}],["twitter",{"_index":499,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":511,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":304,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["types",{"_index":193,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["types.objectid.isvalid(id",{"_index":204,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["typescript",{"_index":432,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["unique",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":471,"title":{},"body":{"index.html":{}}}],["use",{"_index":268,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["usefactory",{"_index":527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usepipes",{"_index":348,"title":{},"body":{"controllers/PostsController.html":{}}}],["usepipes(new",{"_index":355,"title":{},"body":{"controllers/PostsController.html":{}}}],["user",{"_index":173,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["userid",{"_index":100,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"interfaces/IPost.html":{},"classes/PostValidation.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":275,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"interfaces/IMongooseDefaults-1.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["validation",{"_index":311,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation/post.validation",{"_index":349,"title":{},"body":{"controllers/PostsController.html":{}}}],["validation/validation.pipe",{"_index":330,"title":{},"body":{"classes/PostValidation.html":{}}}],["validator",{"_index":110,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"dependencies.html":{}}}],["value",{"_index":186,"title":{},"body":{"classes/BaseModel.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostValidation.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":139,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{}}}],["variable",{"_index":375,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":515,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":439,"title":{},"body":{"miscellaneous/functions.html":{}}}],["watch",{"_index":465,"title":{},"body":{"index.html":{}}}],["website",{"_index":497,"title":{},"body":{"index.html":{}}}],["world",{"_index":93,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":486,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Middleware/errors.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/Middleware/errors.filter.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from \"@nestjs/common\";\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  public catch(exception: any, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    // const status = exception ? exception.getStatus() : 500;\n\n    response.status(500).json(\n      {\n        message: exception.toString(),\n        path: request.url,\n        stack: exception,\n        statusCode: 500,\n        timestamp: new Date().toISOString()\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { AppService } from \"./app.service\";\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {\n  }\n\n  @Get()\n  public getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            ProductModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n// import { AppController } from \"./app.controller\";\n// import { AppService } from \"./app.service\";\nimport { ProductModule } from \"./module/post/post.module\";\nimport { ArticleModule } from \"./module/article/article.module\";\n\n// @ts-ignore\n@Module({\n          // controllers: [AppController],\n          imports: [ProductModule, ArticleModule],\n          // providers: [AppService]\n        })\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class AppService {\n  public getHello(): string {\n    return \"Hello World!\";\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleDto.html":{"url":"classes/ArticleDto.html","title":"class - ArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/dto/article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                articleNumber\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            articleNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt } from \"class-validator\";\nimport { ApiModelProperty } from \"@nestjs/swagger\";\n\nexport class ArticleDto {\n  @IsInt()\n  @ApiModelProperty()\n  public articleNumber: number;\n\n  @IsString()\n  @ApiModelProperty()\n  public title: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public content: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nDatabaseModule->ArticleModule\n\n\n\n\n\nService\n\nService\n\nArticleModule -->\n\nService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { CustomController } from \"./article.controller\";\nimport { Service } from \"./article.service\";\nimport { DatabaseModule } from \"../../Database/database.module\";\nimport { articleProvider } from \"./article.providers\";\n\n@Module(\n  {\n    controllers: [CustomController],\n    imports: [DatabaseModule],\n    providers: [Service, ...articleProvider]\n  })\nexport class ArticleModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                controller\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(controller: any)\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/controller.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controller\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            controller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/Model/controller.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/module/Model/controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/module/Model/controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/module/Model/controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Body, Delete, Get, Param, Post, Query } from \"@nestjs/common\";\n\nexport abstract class BaseController {\n  private readonly controller: any;\n\n  protected constructor(controller: any) {\n    this.controller = controller;\n  }\n\n  @Post()\n  public create(@Body() values: any): any {\n    this.controller.create(values);\n  }\n\n  @Get()\n  public async list(@Query() query: any): Promise {\n    return this.controller.list(query);\n  }\n\n  @Delete(\":id\")\n  public delete(@Param() params: any): any {\n    return this.controller.delete(params.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                model\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(data: any, type: any)\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/model.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Model\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/Model/model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/Model/model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:32\n                \n            \n\n\n            \n                \n                    This function creates and store values in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:83\n                \n            \n\n\n            \n                \n                    Delete user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:42\n                \n            \n\n\n            \n                \n                    Get Model information by Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(params: IBaseModelParamsInterface, ctx: IBaseModelCtxInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:67\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IBaseModelParamsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ctx\n                                    \n                                                IBaseModelCtxInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Model, Types } from \"mongoose\";\n\nexport interface IBaseModelParamsInterface {\n  options?: any;\n\n  [propName: string]: any;\n}\n\nexport interface IBaseModelCtxInterface {\n  page?: number;\n  perPage?: number;\n  sortBy?: string;\n  sortType?: number;\n\n  [propName: string]: any;\n}\n\nexport abstract class BaseModel {\n  private readonly model: Model;\n  private readonly type: any;\n\n  protected constructor(data: any, type: any) {\n    this.model = data;\n    this.type = type;\n  }\n\n  /**\n   * This function creates and store values in the database\n   * @param values\n   */\n\n  public create(values: any): any {\n    const object = new this.model(values);\n    return object.save();\n  }\n\n  /**\n   * Get Model information by Id\n   * @param id\n   * @return Model\n   */\n  public async get(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model;\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @returns {Promise}\n   * @param params\n   * @param ctx\n   */\n  public list(\n    params: IBaseModelParamsInterface = {},\n    ctx: IBaseModelCtxInterface = { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n  ): any {\n    const { perPage, page, sortBy, sortType } = ctx;\n    return this.model.find(params)\n      .sort({ [sortBy]: sortType })\n      .skip(perPage * (page - 1))\n      .limit(perPage)\n      .exec();\n  }\n\n  /**\n   * Delete user\n   * @public\n   */\n  public async delete(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model.remove();\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/dto/product.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/post/dto/product.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/post/dto/product.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/post/dto/product.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\nimport { ApiModelProperty } from \"@nestjs/swagger\";\n\nexport class Product {\n  @IsString()\n  @ApiModelProperty()\n  public title: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public content: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomController.html":{"url":"controllers/CustomController.html","title":"controller - CustomController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: ArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                ArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Delete } from \"@nestjs/common\";\nimport { ArticleDto } from \"./dto/article.dto\";\nimport { Service } from \"./article.service\";\nimport { IArticle as Interface } from \"./interface/article.interface\";\nimport { BaseController } from \"../Model/controller\";\n\n@Controller(\"article\")\nexport class CustomController extends BaseController {\n  constructor(private readonly postsService: Service) {\n    super(postsService);\n  }\n\n  // tslint:disable-next-line\n  @Post()\n  public create(@Body() values: ArticleDto): any {\n    return super.create(values);\n  }\n\n  // tslint:disable-next-line\n  @Get()\n  public async list(@Query() query: Interface): Promise {\n    return super.list(query);\n  }\n\n  @Delete(\":id\")\n  public delete(@Param() params: Interface): any {\n    return super.delete(params.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { databaseProviders } from \"./database.providers\";\n\n@Module({\n          exports: [...databaseProviders],\n          providers: [...databaseProviders]\n        })\nexport class DatabaseModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IArticle.html":{"url":"interfaces/IArticle.html","title":"interface - IArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/interface/article.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        articleNumber\n                                \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articleNumber\n                                    \n                                \n                                \n                                    \n                                        articleNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nexport interface IArticle extends Document {\n  readonly articleNumber: number;\n  readonly title: string;\n  readonly content: string;\n  readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseModelCtxInterface.html":{"url":"interfaces/IBaseModelCtxInterface.html","title":"interface - IBaseModelCtxInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseModelCtxInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        perPage\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        sortType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [propName: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/model.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        perPage\n                                    \n                                \n                                \n                                    \n                                        perPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortType\n                                    \n                                \n                                \n                                    \n                                        sortType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model, Types } from \"mongoose\";\n\nexport interface IBaseModelParamsInterface {\n  options?: any;\n\n  [propName: string]: any;\n}\n\nexport interface IBaseModelCtxInterface {\n  page?: number;\n  perPage?: number;\n  sortBy?: string;\n  sortType?: number;\n\n  [propName: string]: any;\n}\n\nexport abstract class BaseModel {\n  private readonly model: Model;\n  private readonly type: any;\n\n  protected constructor(data: any, type: any) {\n    this.model = data;\n    this.type = type;\n  }\n\n  /**\n   * This function creates and store values in the database\n   * @param values\n   */\n\n  public create(values: any): any {\n    const object = new this.model(values);\n    return object.save();\n  }\n\n  /**\n   * Get Model information by Id\n   * @param id\n   * @return Model\n   */\n  public async get(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model;\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @returns {Promise}\n   * @param params\n   * @param ctx\n   */\n  public list(\n    params: IBaseModelParamsInterface = {},\n    ctx: IBaseModelCtxInterface = { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n  ): any {\n    const { perPage, page, sortBy, sortType } = ctx;\n    return this.model.find(params)\n      .sort({ [sortBy]: sortType })\n      .skip(perPage * (page - 1))\n      .limit(perPage)\n      .exec();\n  }\n\n  /**\n   * Delete user\n   * @public\n   */\n  public async delete(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model.remove();\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseModelParamsInterface.html":{"url":"interfaces/IBaseModelParamsInterface.html","title":"interface - IBaseModelParamsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseModelParamsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [propName: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/model.ts:4\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model, Types } from \"mongoose\";\n\nexport interface IBaseModelParamsInterface {\n  options?: any;\n\n  [propName: string]: any;\n}\n\nexport interface IBaseModelCtxInterface {\n  page?: number;\n  perPage?: number;\n  sortBy?: string;\n  sortType?: number;\n\n  [propName: string]: any;\n}\n\nexport abstract class BaseModel {\n  private readonly model: Model;\n  private readonly type: any;\n\n  protected constructor(data: any, type: any) {\n    this.model = data;\n    this.type = type;\n  }\n\n  /**\n   * This function creates and store values in the database\n   * @param values\n   */\n\n  public create(values: any): any {\n    const object = new this.model(values);\n    return object.save();\n  }\n\n  /**\n   * Get Model information by Id\n   * @param id\n   * @return Model\n   */\n  public async get(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model;\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @returns {Promise}\n   * @param params\n   * @param ctx\n   */\n  public list(\n    params: IBaseModelParamsInterface = {},\n    ctx: IBaseModelCtxInterface = { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n  ): any {\n    const { perPage, page, sortBy, sortType } = ctx;\n    return this.model.find(params)\n      .sort({ [sortBy]: sortType })\n      .skip(perPage * (page - 1))\n      .limit(perPage)\n      .exec();\n  }\n\n  /**\n   * Delete user\n   * @public\n   */\n  public async delete(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model.remove();\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMongooseDefaults.html":{"url":"interfaces/IMongooseDefaults.html","title":"interface - IMongooseDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMongooseDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBaseModelParamsInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        articleNumber\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articleNumber\n                                    \n                                \n                                \n                                    \n                                        articleNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport * as lodash from \"lodash\";\n\nconst { omitBy, isNil } = lodash;\nimport { IArticle } from \"./interface/article.interface\";\nimport { ArticleDto } from \"./dto/article.dto\";\nimport { ARTICLE_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel, IBaseModelParamsInterface } from \"../Model/model\";\n\ninterface IMongooseDefaults extends IBaseModelParamsInterface {\n  userId?: string;\n  articleNumber?: number;\n}\n\ntype TProps = IArticle & IMongooseDefaults;\n\n@Injectable()\nexport class Service extends BaseModel {\n\n  constructor(\n    @Inject(ARTICLE_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, ArticleDto);\n  }\n\n  public create(value: ArticleDto): IArticle {\n    const createdPost = new this.postModel(value); // Use this to make sure the type is correct, can remove this by default\n    return super.create(createdPost);\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @param {number} skip - Number of users to be skipped.\n   * @returns {Promise}\n   */\n  public list({ userId, articleNumber }: TProps): any {\n    const options = omitBy({ userId, articleNumber }, isNil);\n    return super.list(options, { sortType: 1 }); // overwritten sort type to be Ascending\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMongooseDefaults-1.html":{"url":"interfaces/IMongooseDefaults-1.html","title":"interface - IMongooseDefaults-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMongooseDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/product.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBaseModelParamsInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport * as lodash from \"lodash\";\n\nconst { omitBy, isNil } = lodash;\nimport { IPost } from \"./interface/post.interface\";\nimport { Product } from \"./dto/create-post.dto\";\nimport { POST_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel, IBaseModelParamsInterface } from \"../Model/model\";\n\ninterface IMongooseDefaults extends IBaseModelParamsInterface {\n  userId?: string;\n}\n\ntype TProps = IPost & IMongooseDefaults;\n\n@Injectable()\nexport class PostsService extends BaseModel {\n\n  constructor(\n    @Inject(POST_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, Product);\n  }\n\n  // public create(createPostDto: Product): IPost {\n  //   const createdPost = new this.postModel(createPostDto); // Use this to make sure the type is correct, can remove this by default\n  //   return super.create(createdPost);\n  // }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @param {number} skip - Number of users to be skipped.\n   * @returns {Promise}\n   */\n  // public list({ userId }: TProps): any {\n  //   const options = omitBy({ userId }, isNil);\n  //   return super.list(options, { sortType: 1 }); // overwritten sort type to be Ascending\n  // }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPost.html":{"url":"interfaces/IPost.html","title":"interface - IPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/interface/product.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nexport interface IPost extends Document {\n  readonly title: string;\n  readonly content: string;\n  readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Validation/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                buildSchema\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/Validation/validation.pipe.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/Validation/validation.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as Joi from \"joi\";\nimport { PipeTransform, Injectable, ArgumentMetadata, BadRequestException, HttpException, HttpStatus } from \"@nestjs/common\";\n\n@Injectable()\nexport abstract class JoiValidationPipe implements PipeTransform {\n  public transform(value: any, metadata: ArgumentMetadata): typeof value {\n    const result = Joi.validate(value, this.buildSchema());\n\n    if (result.error !== null) {\n      throw new HttpException(\n        {\n          detail: result.error.message.replace(/\"/g, `'`),\n          message: \"Validation failed\",\n          statusCode: HttpStatus.BAD_REQUEST\n        },\n        HttpStatus.BAD_REQUEST);\n    }\n\n    return result.value;\n  }\n\n  public abstract buildSchema(): object;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_imports\n\n\n\ncluster_PostModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nDatabaseModule->ProductModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nProductModule -->\n\nPostsService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/post/product.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PostsController } from \"./post.controller\";\nimport { PostsService } from \"./post.service\";\nimport { postsProviders } from \"./post.providers\";\nimport { DatabaseModule } from \"../../Database/database.module\";\n\n@Module(\n  {\n    controllers: [PostsController],\n    imports: [DatabaseModule],\n    providers: [\n      PostsService,\n      ...postsProviders\n    ]\n  })\nexport class ProductModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostValidation.html":{"url":"classes/ProductValidation.html","title":"class - ProductValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/Validation/product.validation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        JoiValidationPipe\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildSchema\n                            \n                            \n                                    Public\n                                    Abstract\n                                buildSchema\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/module/post/Validation/product.validation.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Joi from \"joi\";\nimport { JoiValidationPipe } from \"../../../Validation/validation.pipe\";\n\nexport class ProductValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        content: Joi.string().required().max(50),\n        title: Joi.string().required(),\n        userId: Joi.string().required()\n      });\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPostDto: Product)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ProductValidation())@ApiOperation({title: 'Create Posts'})@ApiResponse({description: 'The record has been successfully created.', status: 201})\n                \n            \n\n            \n                \n                    Defined in src/module/post/product.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({title: 'Delete Posts'})\n                \n            \n\n            \n                \n                    Defined in src/module/post/product.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({title: 'List Posts'})\n                \n            \n\n            \n                \n                    Defined in src/module/post/product.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Delete, UsePipes } from \"@nestjs/common\";\nimport { Product } from \"./dto/create-post.dto\";\nimport { PostsService } from \"./post.service\";\nimport { IPost as Interface } from \"./interface/post.interface\";\nimport { BaseController } from \"../Model/controller\";\nimport { ProductValidation } from \"./Validation/post.validation\";\nimport { ApiUseTags, ApiOperation, ApiResponse } from \"@nestjs/swagger\";\n\n@ApiUseTags(\"posts\")\n@Controller(\"posts\")\nexport class PostsController extends BaseController {\n  constructor(private readonly postsService: PostsService) {\n    super(postsService);\n  }\n\n  // tslint:disable-next-line\n  @Post()\n  @UsePipes(new ProductValidation())\n  @ApiOperation({ title: \"Create Posts\" })\n  @ApiResponse(\n    {\n      description: \"The record has been successfully created.\",\n      status: 201\n    })\n  public create(@Body() createPostDto: Product): any {\n    return super.create(createPostDto);\n  }\n\n  // tslint:disable-next-line\n  @Get()\n  @ApiOperation({ title: \"List Posts\" })\n  public async list(@Query() query: Interface): Promise {\n    return super.list(query);\n  }\n\n  // tslint:disable-next-line\n  @Delete(\":id\")\n  @ApiOperation({ title: \"Delete Posts\" })\n  public delete(@Param() params: Interface): any {\n    return super.delete(params.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/product.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                model\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/module/post/product.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:32\n\n                \n            \n\n\n            \n                \n                    This function creates and store values in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:83\n\n                \n            \n\n\n            \n                \n                    Delete user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:42\n\n                \n            \n\n\n            \n                \n                    Get Model information by Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(params: IBaseModelParamsInterface, ctx: IBaseModelCtxInterface)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:67\n\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IBaseModelParamsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ctx\n                                    \n                                                IBaseModelCtxInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Model\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:20\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport * as lodash from \"lodash\";\n\nconst { omitBy, isNil } = lodash;\nimport { IPost } from \"./interface/post.interface\";\nimport { Product } from \"./dto/create-post.dto\";\nimport { POST_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel, IBaseModelParamsInterface } from \"../Model/model\";\n\ninterface IMongooseDefaults extends IBaseModelParamsInterface {\n  userId?: string;\n}\n\ntype TProps = IPost & IMongooseDefaults;\n\n@Injectable()\nexport class PostsService extends BaseModel {\n\n  constructor(\n    @Inject(POST_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, Product);\n  }\n\n  // public create(createPostDto: Product): IPost {\n  //   const createdPost = new this.postModel(createPostDto); // Use this to make sure the type is correct, can remove this by default\n  //   return super.create(createdPost);\n  // }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @param {number} skip - Number of users to be skipped.\n   * @returns {Promise}\n   */\n  // public list({ userId }: TProps): any {\n  //   const options = omitBy({ userId }, isNil);\n  //   return super.list(options, { sortType: 1 }); // overwritten sort type to be Ascending\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Service.html":{"url":"injectables/Service.html","title":"injectable - Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                model\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/module/article/article.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(value: ArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IArticle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(undefined: TProps)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:37\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                TProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:32\n\n                \n            \n\n\n            \n                \n                    This function creates and store values in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:83\n\n                \n            \n\n\n            \n                \n                    Delete user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:42\n\n                \n            \n\n\n            \n                \n                    Get Model information by Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(params: IBaseModelParamsInterface, ctx: IBaseModelCtxInterface)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:67\n\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IBaseModelParamsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ctx\n                                    \n                                                IBaseModelCtxInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Model\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:19\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:20\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport * as lodash from \"lodash\";\n\nconst { omitBy, isNil } = lodash;\nimport { IArticle } from \"./interface/article.interface\";\nimport { ArticleDto } from \"./dto/article.dto\";\nimport { ARTICLE_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel, IBaseModelParamsInterface } from \"../Model/model\";\n\ninterface IMongooseDefaults extends IBaseModelParamsInterface {\n  userId?: string;\n  articleNumber?: number;\n}\n\ntype TProps = IArticle & IMongooseDefaults;\n\n@Injectable()\nexport class Service extends BaseModel {\n\n  constructor(\n    @Inject(ARTICLE_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, ArticleDto);\n  }\n\n  public create(value: ArticleDto): IArticle {\n    const createdPost = new this.postModel(value); // Use this to make sure the type is correct, can remove this by default\n    return super.create(createdPost);\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @param {number} skip - Number of users to be skipped.\n   * @returns {Promise}\n   */\n  public list({ userId, articleNumber }: TProps): any {\n    const options = omitBy({ userId, articleNumber }, isNil);\n    return super.list(options, { sortType: 1 }); // overwritten sort type to be Ascending\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Middleware/errors.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Middleware/swagger.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Validation/validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            ARTICLE_MODEL_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            CAT_MODEL_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DB_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            POST_MODEL_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/Model/controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/module/Model/model.ts\n            \n            class\n            BaseModel\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/module/Model/model.ts\n            \n            interface\n            IBaseModelCtxInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/Model/model.ts\n            \n            interface\n            IBaseModelParamsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/article/article.controller.ts\n            \n            controller\n            CustomController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/article/article.providers.ts\n            \n            variable\n            articleProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/article/article.service.ts\n            \n            injectable\n            Service\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/module/article/article.service.ts\n            \n            interface\n            IMongooseDefaults\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/module/article/article.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/article/dto/article.dto.ts\n            \n            class\n            ArticleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/article/interface/article.interface.ts\n            \n            interface\n            IArticle\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/article/schema/article.schema.ts\n            \n            variable\n            ArticleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/post/Validation/product.validation.ts\n            \n            class\n            ProductValidation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/dto/product.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/interface/product.interface.ts\n            \n            interface\n            IPost\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/product.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/product.providers.ts\n            \n            variable\n            postsProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/post/product.service.ts\n            \n            injectable\n            PostsService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/module/post/product.service.ts\n            \n            interface\n            IMongooseDefaults\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/post/product.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/post/schema/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^5.4.0\n        \n            @nestjs/core : ^5.4.0\n        \n            @nestjs/mongoose : ^6.0.0\n        \n            @nestjs/platform-fastify : ^6.0.1\n        \n            @nestjs/swagger : ^3.0.1\n        \n            class-transformer : ^0.2.0\n        \n            class-validator : ^0.9.1\n        \n            compression : ^1.7.4\n        \n            dotenv : ^7.0.0\n        \n            express : ^4.16.4\n        \n            express-rate-limit : ^3.4.0\n        \n            helmet : ^3.16.0\n        \n            joi : ^14.3.1\n        \n            lodash : ^4.17.11\n        \n            mongoose : ^5.4.19\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.2.2\n        \n            typescript : ^3.0.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/Middleware/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nArticleModule -->\n\nDatabaseModule->ArticleModule\n\n\n\nProductModule -->\n\nDatabaseModule->ProductModule\n\n\n\n\n\nService\n\nService\n\nArticleModule -->\n\nService->ArticleModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nProductModule -->\n\nPostsService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TProps   (src/.../article.service.ts)\n                        \n                        \n                            TProps   (src/.../product.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/module/article/article.service.ts\n    \n    \n        \n            \n                \n                    \n                    TProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/module/post/product.service.ts\n    \n    \n        \n            \n                \n                    \n                    TProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARTICLE_MODEL_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            articleProvider   (src/.../article.providers.ts)\n                        \n                        \n                            ArticleSchema   (src/.../article.schema.ts)\n                        \n                        \n                            CAT_MODEL_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            DB_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            POST_MODEL_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            postsProviders   (src/.../product.providers.ts)\n                        \n                        \n                               (src/.../article.service.ts)\n                        \n                        \n                               (src/.../product.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ARTICLE_MODEL_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"ArticleConnectionToken\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CAT_MODEL_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"CatConnectionToken\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DB_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"DbConnectionToken\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POST_MODEL_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"PostConnectionToken\"\n                        \n                    \n\n\n            \n        \n\n    src/module/article/article.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            articleProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    inject: [DB_PROVIDER],\n    provide: ARTICLE_MODEL_PROVIDER,\n    useFactory: (connection: Connection) => connection.model(\"Article\", ArticleSchema)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/module/article/schema/article.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ArticleSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema(\n  {\n    articleNumber: {\n      require: true,\n      type: Number\n    },\n    content: {\n      required: false,\n      type: String\n    },\n    title: {\n      required: true,\n      type: String,\n      unique: true\n    },\n    userId: {\n      required: true,\n      type: mongoose.SchemaTypes.ObjectId\n    }\n  },\n  {\n    timestamps: true\n  }\n)\n                        \n                    \n\n\n            \n        \n\n    src/Database/database.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: DB_PROVIDER,\n    useFactory: async () => {\n      (mongoose as any).Promise = global.Promise;\n      return await mongoose.connect(\"mongodb://bchurunway:Node00bchurunway@128.199.64.153:27017/bchurunway\");\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/module/post/schema/product.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProductSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema(\n  {\n    content: {\n      required: false,\n      type: String\n    },\n    title: {\n      required: true,\n      type: String,\n      unique: true\n    },\n    userId: {\n      ref: \"Article\",\n      required: true,\n      type: mongoose.SchemaTypes.ObjectId\n    }\n  },\n  {\n    timestamps: true\n  }\n)\n                        \n                    \n\n\n            \n        \n\n    src/module/post/product.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            postsProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    inject: [DB_PROVIDER],\n    provide: POST_MODEL_PROVIDER,\n    useFactory: (connection: Connection) => connection.model(\"Post\", ProductSchema)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/module/article/article.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lodash\n                        \n                    \n\n\n            \n        \n\n    src/module/post/product.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lodash\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
