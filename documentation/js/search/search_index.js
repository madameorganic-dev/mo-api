var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.012,1,2.567]],["body/classes/AllExceptionsFilter.html",[0,0.014,1,3.78,2,1.402,3,0.311,4,0.274,5,0.274,6,3.3,7,3.394,8,5.65,9,0.311,10,1.308,11,0.951,12,3.997,13,5.081,14,5.65,15,5.984,16,0.708,17,3.903,18,0.939,19,0.026,20,0.762,21,0.388,22,0.708,23,5.65,24,0.762,25,0.311,26,0.939,27,0.311,28,2.464,29,2.004,30,3.903,31,3.903,32,3.903,33,3.3,34,3.903,35,3.394,36,3.903,37,3.903,38,3.903,39,2.37,40,3.3,41,2.903,42,3.903,43,3.903,44,3.903,45,3.903,46,3.3,47,1.857,48,1.607,49,3.903,50,0.014,51,0.019,52,0.014]],["title/modules/AppModule.html",[53,1.326,54,2.305]],["body/modules/AppModule.html",[0,0.015,3,0.325,4,0.286,5,0.286,19,0.026,25,0.485,26,0.98,27,0.325,50,0.015,51,0.019,52,0.015,53,2.216,54,4.507,55,1.939,56,2.093,57,2.475,58,2.475,59,2.093,60,2.269,61,2.269,62,3.446,63,3.446,64,3.908,65,3.908,66,3.908,67,3.173,68,2.475,69,2.475,70,4.076,71,3.49,72,4.076,73,4.076,74,4.076]],["title/classes/ArticleDto.html",[0,0.012,75,1.921]],["body/classes/ArticleDto.html",[0,0.018,2,1.37,3,0.304,4,0.268,5,0.268,9,0.304,11,1.138,16,1.076,19,0.026,21,0.59,25,0.399,27,0.304,50,0.014,51,0.019,52,0.014,75,2.788,76,3.227,77,1.472,78,3.393,79,2.869,80,2.301,81,2.47,82,2.382,83,3.046,84,3.816,85,3.816,86,1.859,87,4.157,88,3.816,89,3.816,90,3.816,91,4.413,92,5.007,93,2.549,94,4.582,95,1.96]],["title/modules/ArticleModule.html",[53,1.326,64,2.096]],["body/modules/ArticleModule.html",[0,0.014,3,0.318,4,0.281,5,0.281,19,0.026,25,0.498,26,0.961,27,0.318,50,0.015,51,0.019,52,0.015,53,2.195,55,1.9,56,2.051,57,2.425,58,2.425,59,2.051,60,3.18,61,2.224,64,4.008,67,3.132,68,2.425,69,2.425,71,3.445,96,3.377,97,3.377,98,3.377,99,3.287,100,2.298,101,3.994,102,2.648,103,2.933,104,3.994,105,3.377,106,2.971,107,3.837,108,3.994]],["title/classes/BaseController.html",[0,0.012,109,1.921]],["body/classes/BaseController.html",[0,0.012,2,1.189,3,0.264,4,0.232,5,0.232,9,0.264,10,1.171,11,1.081,16,1.065,18,1.347,19,0.026,20,1.093,21,0.584,22,1.016,24,1.015,25,0.264,26,0.796,27,0.264,50,0.012,51,0.017,52,0.012,77,1.338,83,2.67,109,2.534,110,2.799,111,2.299,112,1.529,113,2.792,114,2.165,115,2.331,116,2.141,117,1.749,118,1.7,119,3.039,120,4.551,121,4.551,122,1.575,123,3.473,124,3.31,125,2.165,126,2.211,127,2.799,128,3.31,129,1.874,130,1.881,131,2.211,132,3.31,133,3.473,134,2.211,135,1.463,136,1.463,137,3.31,138,2.211,139,3.31,140,2.211,141,1.095,142,3.31,143,2.211,144,2.211,145,3.31]],["title/classes/BaseModel.html",[0,0.012,146,1.525]],["body/classes/BaseModel.html",[0,0.006,2,0.636,3,0.141,4,0.124,5,0.124,9,0.141,10,0.733,11,0.988,12,2.734,16,0.951,18,1.079,19,0.026,20,0.875,21,0.6,22,0.814,24,0.875,25,0.227,27,0.285,28,1.471,29,2.304,39,3.7,47,1.355,48,1.686,50,0.007,51,0.011,52,0.007,77,0.837,82,1.699,86,1.59,111,2.391,112,1.59,114,1.355,115,2.078,116,1.686,117,1.724,118,0.909,119,1.902,122,1.355,125,1.947,129,1.471,130,1.692,135,1.81,136,0.783,141,1.079,146,1.259,147,1.182,148,1.989,149,3.255,150,2.119,151,2.848,152,3.045,153,1.81,154,1.77,155,1.77,156,1.77,157,1.462,158,1.586,159,1.586,160,1.586,161,1.586,162,1.77,163,1.462,164,2.227,165,1.586,166,1.77,167,1.586,168,1.182,169,1.81,170,1.947,171,1.77,172,1.462,173,1.462,174,2.102,175,0.986,176,0.68,177,2.498,178,2.304,179,1.847,180,2.279,181,1.586,182,2.498,183,1.317,184,0.636,185,1.317,186,0.685,187,1.075,188,2.119,189,1.317,190,1.317,191,1.317,192,3.045,193,0.842,194,1.317,195,2.17,196,1.317,197,1.317,198,2.386,199,2.658,200,3.201,201,2.119,202,2.119,203,2.119,204,2.119,205,1.317,206,1.317,207,1.317,208,1.317,209,1.075,210,1.317,211,1.317,212,1.317,213,1.317,214,1.317,215,2.119,216,1.317,217,1.317]],["title/classes/CreatePostDto.html",[0,0.012,218,1.921]],["body/classes/CreatePostDto.html",[0,0.019,2,1.434,3,0.318,4,0.281,5,0.281,9,0.318,11,1.122,16,1.036,19,0.025,21,0.568,25,0.411,27,0.318,50,0.015,51,0.019,52,0.015,77,1.517,79,2.933,80,2.352,81,2.525,83,2.933,86,1.882,87,4.249,91,4.491,93,2.668,94,4.491,95,2.051,218,2.872,219,5.105,220,3.377,221,3.994,222,3.994,223,3.994]],["title/controllers/CustomController.html",[103,1.772,113,1.641]],["body/controllers/CustomController.html",[0,0.011,3,0.231,4,0.204,5,0.204,9,0.231,10,1.068,11,1.049,16,0.879,18,1.165,19,0.026,20,0.945,21,0.482,22,0.879,24,0.945,25,0.463,26,0.698,27,0.231,35,3.235,50,0.011,51,0.015,52,0.011,75,2.943,80,1.195,83,2.487,95,1.49,100,1.49,102,1.49,103,2.131,105,2.454,109,2.31,112,0.853,113,1.38,114,2.514,115,1.861,116,1.994,117,1.594,122,1.38,123,2.771,125,1.974,126,1.938,127,2.454,129,1.709,130,1.393,131,1.938,133,3.235,134,1.938,135,1.283,138,1.938,140,1.938,141,1.165,143,1.938,144,1.938,186,1.44,224,2.454,225,2.159,226,3.508,227,2.454,228,2.902,229,3.086,230,3.086,231,3.086,232,2.159,233,3.086,234,2.141,235,3.086,236,2.902,237,2.902,238,2.902,239,2.159,240,1.616,241,2.159,242,2.159,243,2.159,244,3.086,245,3.603,246,2.902,247,2.902,248,0.912,249,2.159,250,1.38,251,2.159,252,2.52,253,2.52,254,2.52,255,2.159,256,2.902,257,2.159,258,2.902]],["title/controllers/CustomController-1.html",[103,1.487,113,1.377,179,1.192]],["body/controllers/CustomController-1.html",[0,0.01,3,0.214,4,0.189,5,0.189,9,0.214,10,1.01,11,1.029,16,0.841,18,1.116,19,0.026,20,0.905,21,0.461,22,0.841,24,0.905,25,0.466,26,0.646,27,0.214,35,3.097,50,0.01,51,0.015,52,0.01,80,1.909,83,2.381,95,1.38,100,1.409,102,1.38,103,2.015,109,2.185,112,0.79,113,1.278,114,2.426,115,1.782,116,2.234,117,1.96,123,2.622,126,1.795,129,1.616,130,1.318,131,1.795,133,3.097,134,1.795,135,1.188,138,1.795,140,1.795,141,1.116,143,1.795,144,1.795,186,0.646,218,2.185,225,1.999,227,2.272,229,2.92,230,2.92,231,2.92,232,1.999,233,2.92,234,2.05,235,2.92,242,1.999,243,1.999,244,3.794,245,3.449,248,0.844,249,1.999,250,1.278,251,1.999,252,2.816,253,2.816,254,2.816,255,1.999,257,1.999,259,2.272,260,5.665,261,2.272,262,3.547,263,2.687,264,2.687,265,2.272,266,2.272,267,2.687,268,2.272,269,2.687,270,2.272,271,2.272,272,2.272,273,1.632,274,2.272,275,1.632,276,1.735,277,2.687,278,3.319,279,2.687,280,2.687,281,2.272,282,2.272,283,2.272]],["title/modules/DatabaseModule.html",[53,1.326,99,1.772]],["body/modules/DatabaseModule.html",[0,0.018,3,0.387,4,0.341,5,0.341,19,0.026,25,0.464,26,1.167,27,0.387,50,0.018,51,0.022,52,0.018,53,2.237,55,2.307,60,2.701,61,2.701,99,2.989,284,4.851,285,4.64,286,4.851]],["title/guards/GuestGuard.html",[287,2.567,288,2.567]],["body/guards/GuestGuard.html",[0,0.015,3,0.328,4,0.289,5,0.289,7,2.75,9,0.328,10,1.354,11,0.975,16,0.747,18,0.991,19,0.026,20,0.803,21,0.41,22,0.747,24,0.803,25,0.462,26,0.991,27,0.328,28,1.696,50,0.015,51,0.02,52,0.015,130,1.766,141,0.991,288,3.912,289,3.063,290,3.482,291,5.163,292,4.447,293,5.163,294,4.118,295,3.482,296,3.194,297,5.795,298,1.889,299,4.118,300,2.5,301,3.482,302,4.118,303,4.118,304,4.118]],["title/interfaces/IArticle.html",[186,0.83,240,1.921]],["body/interfaces/IArticle.html",[3,0.337,4,0.297,5,0.297,9,0.337,19,0.025,21,0.614,25,0.337,27,0.337,50,0.016,51,0.02,52,0.016,77,1.574,78,3.746,79,3.168,80,2.54,81,2.727,82,2.793,86,1.982,112,1.814,184,1.52,186,1.019,240,2.981,248,1.682,305,2.174,306,3.58,307,4.367]],["title/interfaces/IBaseModelCtxInterface.html",[170,1.641,186,0.83]],["body/interfaces/IBaseModelCtxInterface.html",[0,0.008,3,0.169,4,0.149,5,0.149,9,0.169,11,0.825,12,3.026,16,0.385,19,0.026,21,0.538,22,1.013,24,0.415,25,0.262,27,0.321,28,1.657,29,2.067,39,3.838,47,1.011,48,1.866,50,0.008,51,0.012,52,0.008,77,0.967,82,2.727,86,1.642,111,1.779,112,1.183,115,1.547,116,0.875,117,1.264,119,1.419,122,1.011,125,1.565,129,1.355,130,1.522,135,2.003,136,0.939,141,1.179,146,0.939,147,1.419,148,1.183,149,3.217,150,1.581,152,2.994,153,1.779,157,1.091,158,1.183,159,1.183,160,1.183,161,1.183,163,1.091,164,2.134,165,1.183,167,1.183,169,1.454,170,1.914,172,1.091,173,1.091,174,1.689,177,3.009,178,2.776,179,1.657,180,2.886,181,1.183,182,3.009,183,1.581,184,0.763,185,1.581,186,0.791,187,1.29,188,2.994,189,1.581,190,1.581,191,1.581,192,3.371,193,1.011,194,1.581,195,2.444,196,1.581,197,1.581,198,2.688,199,2.994,200,3.462,201,2.447,202,2.447,203,2.447,204,2.447,205,1.581,206,1.581,207,1.581,208,1.581,209,1.29,210,1.581,211,1.581,212,1.581,213,1.581,214,1.581,215,2.447,216,1.581,217,1.581,305,1.091,308,1.797,309,2.125]],["title/interfaces/IBaseModelParamsInterface.html",[169,1.525,186,0.83]],["body/interfaces/IBaseModelParamsInterface.html",[0,0.008,3,0.178,4,0.157,5,0.157,9,0.178,11,0.845,12,3.112,16,0.406,19,0.026,21,0.464,22,0.621,24,0.437,25,0.273,27,0.331,28,1.713,29,2.136,39,3.875,47,1.066,48,1.918,50,0.008,51,0.013,52,0.008,77,1.007,82,1.979,86,1.557,111,1.839,112,1.223,115,1.598,116,0.922,117,1.316,119,1.496,122,1.066,125,1.63,129,1.411,130,1.564,135,2.059,136,0.99,141,1.208,146,0.99,147,1.496,148,1.247,149,3.25,150,1.666,152,3.094,153,1.839,157,1.15,158,1.247,159,1.247,160,1.247,161,1.247,163,1.15,164,2.18,165,1.247,167,1.247,169,1.839,170,1.63,172,1.15,173,1.15,174,1.759,177,2.594,178,2.392,179,1.713,180,2.316,181,1.247,182,2.594,183,1.666,184,0.804,185,1.666,186,0.824,187,2.829,188,3.094,189,1.666,190,1.666,191,1.666,192,3.466,193,1.066,194,1.666,195,2.526,196,1.666,197,1.666,198,2.778,199,3.094,200,3.536,201,2.548,202,2.548,203,2.548,204,2.548,205,1.666,206,1.666,207,1.666,208,1.666,209,1.36,210,1.666,211,1.666,212,1.666,213,1.666,214,1.666,215,2.548,216,1.666,217,1.666,305,1.15,308,1.894,310,2.24]],["title/interfaces/IMongooseDefaults.html",[186,0.83,311,2.305]],["body/interfaces/IMongooseDefaults.html",[0,0.011,3,0.243,4,0.214,5,0.214,9,0.243,11,0.723,19,0.026,21,0.567,22,0.98,24,0.595,25,0.484,26,0.734,27,0.243,28,2.05,47,1.45,48,1.256,50,0.011,51,0.016,52,0.011,75,2.771,77,1.264,78,3.59,81,2.613,82,2.71,86,1.464,100,1.095,111,1.348,112,0.897,117,1.652,118,1.566,130,1.024,135,1.348,141,1.034,146,1.9,149,2.556,169,2.2,172,1.566,173,1.566,174,1.566,175,1.698,178,1.566,179,1.256,184,1.095,186,0.734,187,1.852,209,1.852,239,2.268,240,2.393,241,2.268,248,1.564,298,1.543,300,3.022,305,1.566,311,3.324,312,1.852,313,1.852,314,3.634,315,3.634,316,2.037,317,2.037,318,2.037,319,3.197,320,2.578,321,2.037,322,2.037,323,2.578,324,2.578,325,2.578,326,2.578,327,2.578,328,2.578,329,2.578,330,2.578,331,2.578,332,2.578,333,2.578,334,2.578,335,2.578,336,2.578,337,2.578]],["title/interfaces/IPost.html",[186,0.83,338,2.096]],["body/interfaces/IPost.html",[3,0.35,4,0.308,5,0.308,9,0.35,19,0.025,21,0.594,25,0.35,27,0.35,50,0.016,51,0.02,52,0.016,77,1.61,79,3.209,80,2.573,81,2.762,86,1.994,112,1.755,184,1.576,186,1.056,248,1.721,305,2.254,307,4.44,338,3.325,339,3.711]],["title/interfaces/IProduct.html",[186,0.83,273,2.096]],["body/interfaces/IProduct.html",[3,0.35,4,0.308,5,0.308,9,0.35,19,0.025,20,1.219,21,0.594,25,0.35,27,0.35,50,0.016,51,0.02,52,0.016,77,1.61,86,1.994,112,1.755,184,1.576,186,1.056,234,2.762,248,1.721,273,3.325,305,2.254,307,4.44,340,3.711,341,3.795]],["title/injectables/JoiValidationPipe.html",[298,1.239,342,1.772]],["body/injectables/JoiValidationPipe.html",[0,0.014,3,0.3,4,0.265,5,0.265,7,2.517,9,0.3,10,1.278,11,1.06,16,0.901,18,0.906,19,0.026,20,0.735,21,0.375,22,0.684,24,0.735,25,0.396,26,0.906,27,0.3,28,1.552,41,2.803,46,3.186,48,1.552,50,0.018,51,0.018,52,0.014,136,2.609,141,0.906,176,1.908,193,2.362,198,2.517,200,2.517,298,1.783,342,2.55,343,2.288,344,3.186,345,3.585,346,3.015,347,3.768,348,3.015,349,3.092,350,3.585,351,3.768,352,2.765,353,4.965,354,4.965,355,3.768,356,3.768,357,3.768,358,3.768,359,3.768,360,3.186,361,3.768,362,3.768,363,3.768,364,4.965,365,3.768]],["title/classes/LoggerService.html",[0,0.012,153,1.525]],["body/classes/LoggerService.html",[0,0.011,2,1.101,3,0.432,4,0.215,5,0.215,9,0.244,10,1.11,11,1.045,16,1.074,18,1.038,19,0.026,20,0.842,21,0.497,22,0.782,24,1.057,25,0.244,27,0.244,28,1.262,39,3.031,41,3.209,48,1.262,50,0.011,51,0.016,52,0.011,77,1.268,86,1.741,111,2.791,112,1.468,118,2.563,141,1.038,153,1.907,296,3.289,366,2.592,367,4.991,368,5.417,369,5.417,370,4.313,371,4.313,372,4.313,373,3.065,374,4.58,375,4.313,376,3.065,377,3.065,378,3.065,379,3.647,380,4.313,381,3.065,382,4.313,383,4.313,384,3.065,385,3.065,386,3.065,387,3.065,388,3.065,389,3.065,390,3.065,391,3.065,392,3.065,393,3.065,394,3.065,395,3.065,396,3.065,397,4.991,398,2.592,399,2.592,400,3.065]],["title/classes/PostDeleteValidation.html",[0,0.012,276,1.525]],["body/classes/PostDeleteValidation.html",[0,0.018,2,1.332,3,0.296,4,0.261,5,0.261,9,0.296,10,1.265,11,1.093,16,1,18,0.892,19,0.026,20,0.724,21,0.369,22,0.673,24,0.959,25,0.392,27,0.392,50,0.014,51,0.018,52,0.014,79,1.905,80,1.528,81,1.64,136,2.172,141,1.182,164,1.528,176,1.426,193,2.791,248,1.732,276,2.172,342,3.221,345,3.945,346,2.984,348,2.253,349,2.736,350,2.984,352,2.736,401,2.76,402,3.71,403,2.524,404,2.478,405,2.478,406,2.478,407,2.253,408,3.282,409,2.478,410,3.681]],["title/classes/PostDeleteValidation-1.html",[0,0.01,179,1.192,276,1.28]],["body/classes/PostDeleteValidation-1.html",[0,0.018,2,1.316,3,0.292,4,0.257,5,0.257,9,0.292,10,1.255,11,1.09,16,0.994,18,0.882,19,0.026,20,0.951,21,0.365,22,0.665,24,0.951,25,0.388,27,0.388,50,0.014,51,0.018,52,0.014,136,2.155,141,1.173,164,1.509,176,1.408,193,2.777,234,1.62,248,1.721,252,2.225,253,2.225,254,2.225,275,2.225,276,2.155,341,2.225,342,3.21,345,3.934,346,2.96,348,2.225,349,2.714,350,2.96,352,2.714,403,2.503,404,2.448,405,2.448,406,2.448,408,3.256,409,2.448,410,3.658,411,2.726,412,3.665]],["title/modules/PostModule.html",[53,1.326,65,2.096]],["body/modules/PostModule.html",[0,0.014,3,0.316,4,0.279,5,0.279,19,0.026,25,0.497,26,0.954,27,0.316,50,0.015,51,0.019,52,0.015,53,2.188,55,1.887,56,2.037,57,2.409,58,2.409,59,2.037,60,3.17,61,2.209,65,4.002,67,3.119,68,2.409,69,2.409,71,3.43,99,3.281,102,2.637,106,2.952,250,3.039,413,3.355,414,3.968,415,3.355,416,3.968,417,3.803,418,3.968,419,3.355,420,3.82,421,3.968]],["title/classes/PostValidation.html",[0,0.012,407,2.096]],["body/classes/PostValidation.html",[0,0.018,2,1.332,3,0.296,4,0.261,5,0.261,9,0.296,10,1.265,11,1.093,16,1,18,0.892,19,0.026,20,0.724,21,0.369,22,0.673,24,0.959,25,0.392,27,0.392,50,0.014,51,0.018,52,0.014,79,1.905,80,1.528,81,1.64,136,2.172,141,1.182,164,1.528,176,1.426,193,2.791,248,1.732,276,1.64,342,3.221,345,3.945,346,2.984,348,2.253,349,2.736,350,2.984,352,2.736,401,2.76,403,2.524,404,2.478,405,2.478,406,2.478,407,2.984,408,3.282,409,2.478,410,3.681,422,3.71]],["title/controllers/PostsController.html",[113,1.641,417,2.305]],["body/controllers/PostsController.html",[0,0.01,3,0.21,4,0.185,5,0.185,9,0.21,10,0.997,11,1.024,16,0.833,18,1.104,19,0.026,20,0.896,21,0.457,22,0.833,24,0.896,25,0.464,26,0.635,27,0.21,35,3.066,50,0.01,51,0.014,52,0.01,80,1.89,83,2.357,95,1.355,102,1.355,109,2.157,112,0.776,113,1.256,114,2.405,115,2.163,116,2.218,117,1.943,123,2.588,126,1.763,129,1.595,130,1.698,131,1.763,133,3.066,134,1.763,135,1.167,138,1.763,140,1.763,141,1.104,143,1.763,144,1.763,186,1.399,195,1.603,218,3.134,225,1.964,229,2.882,230,2.882,231,2.882,232,1.964,233,2.882,234,2.029,235,2.882,242,1.964,243,1.964,244,3.762,245,3.414,248,0.829,249,1.964,250,2.183,251,1.964,252,2.787,253,2.787,254,2.787,255,1.964,257,1.964,261,2.232,265,2.232,266,2.232,268,2.232,270,2.232,276,1.713,278,3.276,281,2.232,282,3.276,283,2.232,338,1.603,407,2.353,417,2.588,419,2.232,423,2.232,424,5.629,425,2.64,426,2.64,427,2.64,428,2.64,429,2.64,430,2.64,431,2.232,432,2.232,433,2.232,434,2.64,435,2.64,436,2.64]],["title/injectables/PostsService.html",[250,1.641,298,1.239]],["body/injectables/PostsService.html",[0,0.01,3,0.213,4,0.188,5,0.188,9,0.213,10,1.007,11,1.008,16,1.086,18,1.303,19,0.026,20,1.057,21,0.618,22,0.982,24,0.993,25,0.451,26,0.644,27,0.213,29,2.009,47,1.272,50,0.01,51,0.015,52,0.01,77,1.15,86,1.496,111,2.582,112,1.718,114,1.861,115,2.173,116,1.905,117,1.777,118,2.009,122,1.272,125,1.861,129,1.102,130,1.553,146,2.745,148,2.178,149,3.188,153,1.182,157,1.374,158,1.489,159,1.489,160,1.489,161,1.489,163,1.374,164,1.905,165,1.489,167,1.489,168,1.787,169,1.729,170,1.861,172,1.374,173,1.374,174,2.009,175,1.489,176,1.028,177,1.489,178,1.374,179,1.611,180,1.489,181,1.489,182,1.489,184,0.961,218,2.178,248,1.229,250,1.861,298,1.405,313,1.624,317,1.787,318,1.787,321,2.613,322,1.787,338,1.624,343,1.624,403,3,431,2.262,432,2.262,433,2.262,437,2.262,438,1.99,439,2.675,440,1.99,441,1.99,442,1.99,443,1.99,444,1.99,445,1.99,446,1.99,447,1.99,448,2.675]],["title/classes/Product.html",[0,0.012,262,1.921]],["body/classes/Product.html",[0,0.015,2,1.02,3,0.226,4,0.199,5,0.199,9,0.226,11,1.164,16,1.142,19,0.026,20,0.934,21,0.646,22,0.741,25,0.326,27,0.226,50,0.011,51,0.015,52,0.011,77,1.201,83,3.232,86,1.95,87,4.426,91,4.613,93,1.897,94,4.74,95,1.458,234,2.115,262,2.275,296,3.178,341,2.906,449,2.401,450,4.046,451,4.046,452,4.046,453,4.046,454,4.046,455,4.046,456,2.84,457,2.84,458,4.086,459,2.84,460,2.84,461,2.84,462,2.84,463,2.84,464,2.84,465,2.84,466,2.84,467,2.84,468,4.785,469,5.233]],["title/modules/ProductModule.html",[53,1.326,66,2.096]],["body/modules/ProductModule.html",[0,0.014,3,0.316,4,0.279,5,0.279,19,0.026,25,0.497,26,0.954,27,0.316,50,0.015,51,0.019,52,0.015,53,2.188,55,1.887,56,2.037,57,2.409,58,2.409,59,2.037,60,3.17,61,2.209,66,4.002,67,3.119,68,2.409,69,2.409,71,3.43,99,3.281,100,2.294,102,2.637,103,2.924,106,2.952,272,3.355,470,3.968,471,3.968,472,3.968,473,3.968,474,3.968,475,3.82,476,3.968]],["title/classes/ProductValidation.html",[0,0.012,275,2.096]],["body/classes/ProductValidation.html",[0,0.018,2,1.316,3,0.292,4,0.257,5,0.257,9,0.292,10,1.255,11,1.09,16,0.994,18,0.882,19,0.026,20,0.951,21,0.365,22,0.665,24,0.951,25,0.388,27,0.388,50,0.014,51,0.018,52,0.014,136,2.155,141,1.173,164,1.509,176,1.408,193,2.777,234,1.62,248,1.721,252,2.225,253,2.225,254,2.225,275,2.96,276,1.62,341,2.225,342,3.21,345,3.934,346,2.96,348,2.225,349,2.714,350,2.96,352,2.714,403,2.503,404,2.448,405,2.448,406,2.448,408,3.256,409,2.448,410,3.658,411,2.726,477,3.665]],["title/guards/RestrictedGuard.html",[287,2.567,478,2.567]],["body/guards/RestrictedGuard.html",[0,0.015,3,0.327,4,0.288,5,0.288,7,2.741,9,0.327,10,1.351,11,0.973,16,0.744,18,0.987,19,0.026,20,0.801,21,0.408,22,0.744,24,0.801,25,0.461,26,0.987,27,0.327,28,1.69,50,0.015,51,0.019,52,0.015,141,1.262,289,3.053,291,5.157,292,4.438,293,5.157,295,3.47,296,3.187,298,1.884,478,3.904,479,3.47,480,4.104,481,3.47,482,4.104,483,3.053,484,4.104,485,4.104,486,5.248,487,4.104,488,3.47,489,4.104,490,4.104]],["title/injectables/Service.html",[100,1.239,298,1.239]],["body/injectables/Service.html",[0,0.007,3,0.164,4,0.145,5,0.145,9,0.164,10,0.827,11,1.037,16,1.054,18,1.286,19,0.026,20,1.043,21,0.62,22,0.97,24,1.043,25,0.426,26,0.496,27,0.164,28,1.626,29,1.651,47,1.879,48,0.849,50,0.008,51,0.012,52,0.008,75,2.691,77,0.945,78,2.398,81,1.746,82,1.879,86,1.421,100,1.154,111,2.363,112,1.572,114,2.121,115,1.968,116,1.626,117,2.125,118,1.651,122,0.981,125,1.529,129,0.849,130,1.498,135,0.912,141,0.773,146,2.568,148,1.79,149,3.087,153,0.912,157,1.059,158,1.148,159,1.148,160,1.148,161,1.148,163,1.059,164,1.626,165,1.148,167,1.148,168,1.378,169,1.971,170,1.529,172,2.028,173,2.028,174,2.29,175,1.79,176,1.235,177,1.148,178,1.651,179,1.626,180,1.148,181,1.148,182,1.148,184,0.741,186,0.496,187,1.253,209,1.253,239,1.535,240,1.79,241,1.535,248,1.241,298,1.154,300,2.398,311,2.147,312,1.253,313,1.253,314,2.718,315,2.718,316,1.378,317,1.378,318,1.378,319,3.317,320,1.744,321,2.147,322,1.378,323,2.718,324,1.744,325,1.744,326,1.744,327,1.744,328,1.744,329,1.744,330,1.744,331,1.744,332,1.744,333,1.744,334,1.744,335,1.744,336,1.744,337,1.744,343,1.253,403,2.746,438,1.535,440,1.535,441,1.535,442,1.535,443,1.535,444,1.535,445,1.535,446,1.535,491,2.063,492,2.063,493,2.063,494,2.063]],["title/injectables/Service-1.html",[100,1.04,179,1.192,298,1.04]],["body/injectables/Service-1.html",[0,0.01,3,0.214,4,0.188,5,0.188,9,0.214,10,1.008,11,1.008,16,1.087,18,1.304,19,0.026,20,1.058,21,0.618,22,0.983,24,0.994,25,0.451,26,0.645,27,0.214,29,2.012,47,1.275,50,0.01,51,0.015,52,0.01,77,1.152,86,1.498,100,1.407,111,2.584,112,1.719,114,1.864,115,2.175,116,1.907,117,1.78,118,2.012,122,1.275,125,1.864,129,1.104,130,1.555,146,2.746,148,2.182,149,3.19,153,1.185,157,1.377,158,1.493,159,1.493,160,1.493,161,1.493,163,1.377,164,1.907,165,1.493,167,1.493,168,1.791,169,1.732,170,1.864,172,1.377,173,1.377,174,2.012,175,1.493,176,1.03,177,1.493,178,1.377,179,1.614,180,1.493,181,1.493,182,1.493,184,0.963,248,1.231,262,2.182,271,2.267,273,1.628,274,2.267,298,1.407,313,1.628,317,1.791,318,1.791,321,2.617,322,1.791,343,1.628,403,3.002,438,1.994,440,1.994,441,1.994,442,1.994,443,1.994,444,1.994,445,1.994,446,1.994,495,2.267,496,2.681,497,1.994,498,2.681]],["title/coverage.html",[499,3.483]],["body/coverage.html",[0,0.022,1,1.801,5,0.17,6,2.047,19,0.026,21,0.241,48,0.997,50,0.009,51,0.013,52,0.009,59,1.243,75,1.348,76,2.047,100,1.305,103,1.866,107,1.801,109,1.348,110,2.047,113,2.075,146,1.07,147,2.913,153,1.07,157,2.24,169,1.07,170,1.152,186,1.312,218,1.348,219,2.047,220,2.047,224,2.047,240,1.348,250,1.152,259,2.047,262,1.348,273,1.47,275,1.47,276,1.606,285,1.801,287,2.703,288,1.801,290,2.047,298,1.74,306,2.047,311,1.617,312,2.649,316,1.617,338,1.47,339,2.047,340,2.047,342,1.243,344,2.047,366,2.047,401,2.703,407,1.47,411,2.703,417,1.617,420,1.801,423,2.047,437,2.047,447,1.801,449,2.047,475,1.801,478,1.801,479,2.047,483,1.801,495,2.047,497,1.801,499,1.801,500,2.421,501,2.421,502,2.421,503,2.047,504,6.419,505,6.93,506,6.548,507,2.421,508,4.847,509,2.047,510,2.047,511,3.634,512,4.392,513,2.047,514,2.047,515,2.047,516,2.421,517,4.362,518,4.362,519,4.362,520,6.062,521,2.047,522,2.421,523,2.421,524,2.047,525,2.047,526,2.047,527,2.047,528,2.047,529,2.421,530,2.047,531,3.072,532,2.047,533,2.047,534,2.703,535,2.703,536,2.047,537,2.421,538,2.421]],["title/dependencies.html",[56,2.127,539,2.896]],["body/dependencies.html",[0,0.019,19,0.026,26,0.994,50,0.015,51,0.02,52,0.015,56,2.122,93,2.76,95,2.122,184,1.484,300,2.509,301,3.494,349,2.3,352,2.3,379,3.494,540,5.271,541,4.132,542,4.132,543,4.132,544,4.132,545,4.132,546,4.132,547,5.271,548,4.132,549,4.132,550,4.132,551,4.132,552,4.132,553,4.132,554,4.132,555,5.271,556,4.132,557,4.132,558,4.132,559,4.132,560,4.132,561,4.132,562,4.132,563,4.132,564,4.132,565,4.132,566,4.132,567,4.132,568,4.132,569,4.132,570,4.132,571,4.132,572,3.494,573,4.132]],["title/miscellaneous/enumerations.html",[574,1.377,575,3.503]],["body/miscellaneous/enumerations.html",[9,0.394,19,0.025,50,0.018,51,0.022,52,0.018,100,2.116,176,2.418,481,4.983,574,2.355,575,4.186,576,5.893,577,4.951,578,5.893,579,4.951,580,4.951,581,4.951,582,4.951]],["title/miscellaneous/functions.html",[574,1.377,583,3.503]],["body/miscellaneous/functions.html",[9,0.367,18,1.358,19,0.025,20,1.101,22,1.024,24,1.19,33,3.897,50,0.017,51,0.021,52,0.017,59,3.132,130,1.548,360,3.897,374,3.897,483,4.198,509,3.897,510,4.772,515,3.897,534,3.428,535,4.198,574,2.192,583,3.897,584,4.608,585,4.608,586,3.897,587,4.608,588,3.897,589,4.608]],["title/index.html",[9,0.231,590,2.896,591,2.896]],["body/index.html",[4,0.265,19,0.025,50,0.014,51,0.018,52,0.014,234,1.671,398,4.703,399,3.196,499,2.812,572,3.196,588,3.196,592,3.78,593,3.78,594,4.976,595,3.78,596,3.78,597,3.78,598,3.78,599,3.78,600,3.78,601,3.78,602,3.78,603,3.78,604,5.562,605,3.78,606,3.78,607,3.78,608,5.562,609,6.428,610,3.78,611,3.78,612,3.78,613,6.305,614,3.78,615,3.78,616,4.976,617,3.78,618,3.78,619,3.78,620,4.976,621,3.78,622,3.78,623,3.78,624,4.207,625,4.976,626,4.976,627,3.78,628,3.78,629,3.78,630,3.78,631,3.78,632,3.78,633,3.78,634,3.78,635,3.78,636,3.78,637,3.78,638,3.78,639,3.78,640,3.78,641,3.78,642,3.78,643,3.78,644,3.78,645,3.78,646,3.78,647,3.78,648,3.78,649,3.78]],["title/modules.html",[55,2.227]],["body/modules.html",[19,0.022,50,0.018,51,0.022,52,0.018,54,3.266,55,2.326,64,2.97,65,2.97,66,2.97,99,2.511,624,5.485,650,6.486,651,6.486,652,6.63,653,4.89,654,4.89]],["title/overview.html",[655,3.959]],["body/overview.html",[2,1.429,19,0.025,50,0.015,51,0.019,52,0.015,53,1.53,54,4.405,55,1.894,56,2.044,57,2.417,58,2.417,59,2.044,60,2.216,61,2.216,62,3.366,63,3.366,64,3.952,65,3.952,66,3.952,67,3.125,68,2.417,69,2.417,96,3.366,97,3.366,98,3.366,99,3.206,100,2.165,102,2.044,250,2.713,289,2.961,305,2.044,343,2.417,413,3.366,415,3.366,655,3.366,656,3.981,657,3.981,658,3.981,659,3.981,660,3.366,661,3.981]],["title/miscellaneous/typealiases.html",[574,1.377,662,4.143]],["body/miscellaneous/typealiases.html",[9,0.419,19,0.023,21,0.523,50,0.019,51,0.023,52,0.019,312,3.191,319,4.54,574,2.499,663,5.255,664,4.443]],["title/miscellaneous/variables.html",[574,1.377,665,3.503]],["body/miscellaneous/variables.html",[9,0.164,19,0.026,20,0.401,21,0.666,40,5.311,48,1.623,50,0.008,51,0.012,52,0.008,78,1.248,79,1.646,80,1.32,81,1.417,82,1.525,86,1.847,107,2.385,115,0.79,141,0.495,163,1.056,175,3.551,176,2.392,184,0.738,195,1.248,226,1.738,234,0.909,262,1.145,285,2.385,296,1.947,300,1.248,312,1.248,313,2.393,316,2.632,341,1.248,420,2.385,447,2.932,450,1.738,451,1.738,452,1.738,453,1.738,454,1.738,455,1.738,475,2.385,488,3.764,497,2.932,503,1.738,512,1.738,513,2.711,514,4.324,521,1.738,524,1.738,525,3.332,526,1.738,527,1.738,528,3.332,530,1.738,531,1.738,532,3.332,533,2.711,534,1.529,535,2.385,536,2.711,574,0.978,586,1.738,660,1.738,664,1.738,665,1.738,666,4.826,667,2.056,668,2.056,669,2.056,670,2.056,671,2.056,672,3.206,673,2.056,674,2.056,675,2.056,676,2.056,677,2.056,678,2.056,679,4.451,680,4.451,681,5.113,682,2.056,683,4.451,684,2.056,685,5.913,686,3.941,687,3.206,688,3.941,689,2.056,690,2.056,691,2.056,692,2.056,693,3.206,694,2.056,695,2.056,696,2.056,697,2.056,698,2.056,699,2.056,700,2.056]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["0.1.12",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["0.9.1",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":507,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":179,"title":{"controllers/CustomController-1.html":{},"classes/PostDeleteValidation-1.html":{},"injectables/Service-1.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["1.7.4",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":659,"title":{},"body":{"overview.html":{}}}],["14.3.1",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":660,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["2.6.2",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["201",{"_index":255,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["201})@apiresponse({status",{"_index":232,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["3",{"_index":657,"title":{},"body":{"overview.html":{}}}],["3.0.1",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["3.16.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["3.2.1",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":181,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["4",{"_index":658,"title":{},"body":{"overview.html":{}}}],["4.16.4",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["4.17.11",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["4/9",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["403",{"_index":233,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["44",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["45",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":656,"title":{},"body":{"overview.html":{}}}],["5.4.0",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["5.4.19",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["6",{"_index":661,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["8wrsa.mongodb.net/test?retrywrites=true",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_",{"_index":299,"title":{},"body":{"guards/GuestGuard.html":{}}}],["_.isempty(header",{"_index":304,"title":{},"body":{"guards/GuestGuard.html":{}}}],["abstract",{"_index":136,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["aliases",{"_index":663,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["amazing",{"_index":632,"title":{},"body":{"index.html":{}}}],["angular",{"_index":603,"title":{},"body":{"index.html":{}}}],["any).promise",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":278,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["apimodelproperty",{"_index":94,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"classes/Product.html":{}}}],["apioperation",{"_index":244,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["apiresponse",{"_index":245,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["apiusetags",{"_index":243,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["apiusetags(\"article",{"_index":246,"title":{},"body":{"controllers/CustomController.html":{}}}],["apiusetags(\"posts",{"_index":435,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiusetags(\"products",{"_index":279,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["app",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["applications",{"_index":600,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":54,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":350,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["argumentshost",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["article",{"_index":226,"title":{},"body":{"controllers/CustomController.html":{},"miscellaneous/variables.html":{}}}],["article'})@apiresponse({description",{"_index":228,"title":{},"body":{"controllers/CustomController.html":{}}}],["article.controller",{"_index":104,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.providers",{"_index":108,"title":{},"body":{"modules/ArticleModule.html":{}}}],["article.service",{"_index":105,"title":{},"body":{"modules/ArticleModule.html":{},"controllers/CustomController.html":{}}}],["article_model_provider",{"_index":316,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["articleconnectiontoken",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articledto",{"_index":75,"title":{"classes/ArticleDto.html":{}},"body":{"classes/ArticleDto.html":{},"controllers/CustomController.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["articlemodule",{"_index":64,"title":{"modules/ArticleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules.html":{},"overview.html":{}}}],["articlenumber",{"_index":78,"title":{},"body":{"classes/ArticleDto.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["articleprovider",{"_index":107,"title":{},"body":{"modules/ArticleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["articleschema",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ascending",{"_index":337,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["async",{"_index":115,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":642,"title":{},"body":{"index.html":{}}}],["available",{"_index":654,"title":{},"body":{"modules.html":{}}}],["await",{"_index":195,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"controllers/PostsController.html":{},"miscellaneous/variables.html":{}}}],["backers",{"_index":633,"title":{},"body":{"index.html":{}}}],["basecontroller",{"_index":109,"title":{"classes/BaseController.html":{}},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["basemodel",{"_index":146,"title":{"classes/BaseModel.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["basemodel:20",{"_index":445,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["basemodel:21",{"_index":446,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["basemodel:22",{"_index":444,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["basemodel:35",{"_index":440,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["basemodel:51",{"_index":442,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["basemodel:76",{"_index":443,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["basemodel:98",{"_index":441,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["bash",{"_index":608,"title":{},"body":{"index.html":{}}}],["body",{"_index":134,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["boolean",{"_index":296,"title":{},"body":{"guards/GuestGuard.html":{},"classes/LoggerService.html":{},"classes/Product.html":{},"guards/RestrictedGuard.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":652,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":650,"title":{},"body":{"modules.html":{}}}],["building",{"_index":595,"title":{},"body":{"index.html":{}}}],["buildschema",{"_index":345,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["canactivate",{"_index":291,"title":{},"body":{"guards/GuestGuard.html":{},"guards/RestrictedGuard.html":{}}}],["canactivate(context",{"_index":292,"title":{},"body":{"guards/GuestGuard.html":{},"guards/RestrictedGuard.html":{}}}],["cat_model_provider",{"_index":513,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["catch(exception",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catconnectiontoken",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_articlemodule",{"_index":96,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_imports",{"_index":97,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_articlemodule_providers",{"_index":98,"title":{},"body":{"modules/ArticleModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":413,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_imports",{"_index":414,"title":{},"body":{"modules/PostModule.html":{}}}],["cluster_postmodule_providers",{"_index":415,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":470,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_imports",{"_index":471,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":472,"title":{},"body":{"modules/ProductModule.html":{}}}],["collection",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compression",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["config",{"_index":581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["config.service",{"_index":582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["connection",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model(\"article",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model(\"post",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection.model(\"product",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{}}}],["constants",{"_index":317,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["constructor",{"_index":118,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IMongooseDefaults.html":{},"classes/LoggerService.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["constructor(controller",{"_index":120,"title":{},"body":{"classes/BaseController.html":{}}}],["constructor(data",{"_index":150,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["constructor(postmodel",{"_index":438,"title":{},"body":{"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["constructor(private",{"_index":249,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["content",{"_index":79,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IPost.html":{},"classes/PostDeleteValidation.html":{},"classes/PostValidation.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":295,"title":{},"body":{"guards/GuestGuard.html":{},"guards/RestrictedGuard.html":{}}}],["context.switchtohttp().getrequest().header(\"authorization",{"_index":303,"title":{},"body":{"guards/GuestGuard.html":{}}}],["controller",{"_index":113,"title":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["controller(\"article",{"_index":247,"title":{},"body":{"controllers/CustomController.html":{}}}],["controller(\"posts",{"_index":436,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller(\"products",{"_index":280,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["controllers",{"_index":102,"title":{},"body":{"modules/ArticleModule.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/PostModule.html":{},"controllers/PostsController.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["correct",{"_index":329,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["coverage",{"_index":499,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":114,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["create(@body",{"_index":138,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["create(createpostdto",{"_index":261,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["create(value",{"_index":323,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["create(values",{"_index":122,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["created",{"_index":231,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["createdat",{"_index":174,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["createdby",{"_index":450,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["createdpost",{"_index":324,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["createpostdto",{"_index":218,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["creates",{"_index":158,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["createswagger",{"_index":510,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createswagger(app",{"_index":587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctx",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["ctx.getrequest",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx=${ctx",{"_index":207,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["customcontroller",{"_index":103,"title":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{}},"body":{"modules/ArticleModule.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["data",{"_index":152,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["database",{"_index":160,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["database.providers",{"_index":286,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":106,"title":{},"body":{"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{}}}],["databasemodule",{"_index":99,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":285,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["date().toisostring",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["db_provider",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dbconnectiontoken",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["decorators",{"_index":83,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{},"classes/Product.html":{}}}],["default",{"_index":175,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["delete",{"_index":116,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["delete(\":id",{"_index":143,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["delete(':id",{"_index":127,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{}}}],["delete(':id')@usepipes(new",{"_index":265,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["delete(@param",{"_index":144,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["delete(id",{"_index":161,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["delete(params",{"_index":126,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["dependencies",{"_index":56,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descending",{"_index":172,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["description",{"_index":234,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IProduct.html":{},"classes/PostDeleteValidation-1.html":{},"controllers/PostsController.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["detail",{"_index":361,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["details",{"_index":199,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["development",{"_index":612,"title":{},"body":{"index.html":{}}}],["document",{"_index":307,"title":{},"body":{"interfaces/IArticle.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{}}}],["documentation",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["dto/article.dto",{"_index":239,"title":{},"body":{"controllers/CustomController.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["dto/create",{"_index":431,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["dto/product",{"_index":271,"title":{},"body":{"controllers/CustomController-1.html":{},"injectables/Service-1.html":{}}}],["e2e",{"_index":621,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":596,"title":{},"body":{"index.html":{}}}],["enumerations",{"_index":575,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"classes/LoggerService.html":{}}}],["error(message",{"_index":372,"title":{},"body":{"classes/LoggerService.html":{}}}],["exception",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.getstatus",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.tostring",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exec",{"_index":212,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["executioncontext",{"_index":293,"title":{},"body":{"guards/GuestGuard.html":{},"guards/RestrictedGuard.html":{}}}],["export",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["exports",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["express",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":248,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/ProductValidation.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["extracttokenpayload",{"_index":483,"title":{},"body":{"guards/RestrictedGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["extracttokenpayload(context.switchtohttp().getrequest",{"_index":487,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["extracttokenpayload(request",{"_index":589,"title":{},"body":{"miscellaneous/functions.html":{}}}],["failed",{"_index":198,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{}}}],["false",{"_index":488,"title":{},"body":{"guards/RestrictedGuard.html":{},"miscellaneous/variables.html":{}}}],["fastify",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["forbidden",{"_index":235,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["format",{"_index":380,"title":{},"body":{"classes/LoggerService.html":{}}}],["found",{"_index":204,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["framework",{"_index":594,"title":{},"body":{"index.html":{}}}],["function",{"_index":157,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["functions",{"_index":583,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get()@apioperation({title",{"_index":268,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["get(id",{"_index":165,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["getting",{"_index":590,"title":{"index.html":{}},"body":{}}],["global.promise",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":653,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":629,"title":{},"body":{"index.html":{}}}],["guard",{"_index":287,"title":{"guards/GuestGuard.html":{},"guards/RestrictedGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":289,"title":{},"body":{"guards/GuestGuard.html":{},"guards/RestrictedGuard.html":{},"overview.html":{}}}],["guestguard",{"_index":288,"title":{"guards/GuestGuard.html":{}},"body":{"guards/GuestGuard.html":{},"coverage.html":{}}}],["header",{"_index":302,"title":{},"body":{"guards/GuestGuard.html":{}}}],["heavily",{"_index":601,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":639,"title":{},"body":{"index.html":{}}}],["host",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":354,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["https://nestjs.com",{"_index":646,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":355,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["httpstatus.bad_request",{"_index":364,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["iarticle",{"_index":240,"title":{"interfaces/IArticle.html":{}},"body":{"controllers/CustomController.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["ibasemodelctxinterface",{"_index":170,"title":{"interfaces/IBaseModelCtxInterface.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["ibasemodelparamsinterface",{"_index":169,"title":{"interfaces/IBaseModelParamsInterface.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["id",{"_index":164,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"injectables/PostsService.html":{},"classes/ProductValidation.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["id=${id",{"_index":215,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["identifier",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["imongoosedefaults",{"_index":311,"title":{"interfaces/IMongooseDefaults.html":{}},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["implements",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"guards/GuestGuard.html":{},"injectables/JoiValidationPipe.html":{},"guards/RestrictedGuard.html":{}}}],["import",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":308,"title":{},"body":{"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["info(message",{"_index":375,"title":{},"body":{"classes/LoggerService.html":{}}}],["information",{"_index":167,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["inherited",{"_index":403,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"injectables/PostsService.html":{},"classes/ProductValidation.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["inject",{"_index":313,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/variables.html":{}}}],["inject(article_model_provider",{"_index":320,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["inject(post_model_provider",{"_index":448,"title":{},"body":{"injectables/PostsService.html":{}}}],["inject(project_model_provider",{"_index":498,"title":{},"body":{"injectables/Service-1.html":{}}}],["injectable",{"_index":298,"title":{"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}},"body":{"guards/GuestGuard.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["injectables",{"_index":343,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"overview.html":{}}}],["inspired",{"_index":602,"title":{},"body":{"index.html":{}}}],["install",{"_index":610,"title":{},"body":{"index.html":{}}}],["installation",{"_index":607,"title":{},"body":{"index.html":{}}}],["instance",{"_index":367,"title":{},"body":{"classes/LoggerService.html":{}}}],["interface",{"_index":186,"title":{"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{}},"body":{"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"controllers/PostsController.html":{},"injectables/Service.html":{},"coverage.html":{}}}],["interface/article.interface",{"_index":241,"title":{},"body":{"controllers/CustomController.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["interface/post.interface",{"_index":433,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["interface/product.interface",{"_index":274,"title":{},"body":{"controllers/CustomController-1.html":{},"injectables/Service-1.html":{}}}],["interfaces",{"_index":305,"title":{},"body":{"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"overview.html":{}}}],["ipost",{"_index":338,"title":{"interfaces/IPost.html":{}},"body":{"interfaces/IPost.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{}}}],["iproduct",{"_index":273,"title":{"interfaces/IProduct.html":{}},"body":{"controllers/CustomController-1.html":{},"interfaces/IProduct.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["isactive",{"_index":451,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":468,"title":{},"body":{"classes/Product.html":{}}}],["isdeleted",{"_index":452,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["isint",{"_index":92,"title":{},"body":{"classes/ArticleDto.html":{}}}],["isint()@apimodelproperty",{"_index":84,"title":{},"body":{"classes/ArticleDto.html":{}}}],["isnil",{"_index":315,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["isoptional",{"_index":469,"title":{},"body":{"classes/Product.html":{}}}],["isoptional()@isboolean()@apimodelproperty",{"_index":458,"title":{},"body":{"classes/Product.html":{}}}],["isoptional()@isstring()@apimodelproperty",{"_index":461,"title":{},"body":{"classes/Product.html":{}}}],["isproductionenv",{"_index":368,"title":{},"body":{"classes/LoggerService.html":{}}}],["isstring",{"_index":91,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"classes/Product.html":{}}}],["isstring()@apimodelproperty",{"_index":87,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"classes/Product.html":{}}}],["istestenv",{"_index":369,"title":{},"body":{"classes/LoggerService.html":{}}}],["joi",{"_index":352,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{},"dependencies.html":{}}}],["joi.object",{"_index":408,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["joi.string().required",{"_index":410,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["joi.string().required().max(50",{"_index":409,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["joi.validate(value",{"_index":357,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["join",{"_index":635,"title":{},"body":{"index.html":{}}}],["joivalidationpipe",{"_index":342,"title":{"injectables/JoiValidationPipe.html":{}},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{},"coverage.html":{}}}],["joivalidationpipe:22",{"_index":404,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["joivalidationpipe:6",{"_index":405,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["jsonwebtoken",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":643,"title":{},"body":{"index.html":{}}}],["legend",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["level",{"_index":389,"title":{},"body":{"classes/LoggerService.html":{}}}],["license",{"_index":649,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":626,"title":{},"body":{"index.html":{}}}],["limit",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["limit(perpage",{"_index":211,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["line",{"_index":254,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"classes/PostDeleteValidation-1.html":{},"controllers/PostsController.html":{},"classes/ProductValidation.html":{}}}],["list",{"_index":117,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["list(@query",{"_index":140,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["list(params",{"_index":168,"title":{},"body":{"classes/BaseModel.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["list(query",{"_index":131,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["list(undefined",{"_index":493,"title":{},"body":{"injectables/Service.html":{}}}],["lodash",{"_index":300,"title":{},"body":{"guards/GuestGuard.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":148,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["loggerservice",{"_index":153,"title":{"classes/LoggerService.html":{}},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"classes/LoggerService.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{}}}],["make",{"_index":327,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["masterproductid",{"_index":453,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{}}}],["metadata",{"_index":349,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{},"dependencies.html":{}}}],["methods",{"_index":10,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["middleware/logger",{"_index":185,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["miscellaneous",{"_index":574,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":625,"title":{},"body":{"index.html":{}}}],["mode",{"_index":616,"title":{},"body":{"index.html":{}}}],["model",{"_index":149,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["model.remove",{"_index":216,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["model/controller",{"_index":242,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["model/model",{"_index":318,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["module",{"_index":53,"title":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["module/article/article.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["module/post/post.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["module/product/product.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["modules",{"_index":55,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":184,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["mongoose.connect(\"mongodb+srv://rwadmin:6cfzuqv4jycwsb7@cluster0",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schema",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose.schematypes.objectid",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":638,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":644,"title":{},"body":{"index.html":{}}}],["name",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":604,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":648,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"modules/PostModule.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"modules/ProductModule.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":95,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{},"classes/Product.html":{},"dependencies.html":{}}}],["new",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"injectables/Service.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":253,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"classes/PostDeleteValidation-1.html":{},"controllers/PostsController.html":{},"classes/ProductValidation.html":{}}}],["node.js",{"_index":593,"title":{},"body":{"index.html":{}}}],["npm",{"_index":609,"title":{},"body":{"index.html":{}}}],["null",{"_index":360,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":82,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseModel.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":193,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["object.save",{"_index":196,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["observable",{"_index":297,"title":{},"body":{"guards/GuestGuard.html":{}}}],["omitby",{"_index":314,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["open",{"_index":627,"title":{},"body":{"index.html":{}}}],["optional",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":187,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["order",{"_index":173,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["overview",{"_index":655,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":336,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["package",{"_index":539,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":182,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["param",{"_index":135,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"controllers/PostsController.html":{},"injectables/Service.html":{}}}],["parameters",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":129,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["params=${params",{"_index":206,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["path",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["payload",{"_index":486,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["payload.role",{"_index":489,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["payload_components",{"_index":536,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["perpage",{"_index":180,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["pipetransform",{"_index":353,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["please",{"_index":636,"title":{},"body":{"index.html":{}}}],["post",{"_index":123,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["post()@apioperation({title",{"_index":227,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{}}}],["post()@usepipes(new",{"_index":425,"title":{},"body":{"controllers/PostsController.html":{}}}],["post.controller",{"_index":418,"title":{},"body":{"modules/PostModule.html":{}}}],["post.dto",{"_index":432,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["post.dto.ts",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["post.dto.ts:11",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:15",{"_index":223,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:7",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.providers",{"_index":421,"title":{},"body":{"modules/PostModule.html":{}}}],["post.service",{"_index":419,"title":{},"body":{"modules/PostModule.html":{},"controllers/PostsController.html":{}}}],["post_model_provider",{"_index":447,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postconnectiontoken",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postdeletevalidation",{"_index":276,"title":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{}},"body":{"controllers/CustomController-1.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"classes/ProductValidation.html":{},"coverage.html":{}}}],["postdeletevalidation())@apioperation({title",{"_index":266,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["postmodel",{"_index":321,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["postmodule",{"_index":65,"title":{"modules/PostModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostModule.html":{},"modules.html":{},"overview.html":{}}}],["posts",{"_index":424,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts'})@apiresponse({description",{"_index":427,"title":{},"body":{"controllers/PostsController.html":{}}}],["postschema",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["postscontroller",{"_index":417,"title":{"controllers/PostsController.html":{}},"body":{"modules/PostModule.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["postsproviders",{"_index":420,"title":{},"body":{"modules/PostModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postsservice",{"_index":250,"title":{"injectables/PostsService.html":{}},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/PostModule.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["postvalidation",{"_index":407,"title":{"classes/PostValidation.html":{}},"body":{"classes/PostDeleteValidation.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["postvalidation())@apioperation({title",{"_index":426,"title":{},"body":{"controllers/PostsController.html":{}}}],["prefix",{"_index":225,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["private",{"_index":111,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"classes/LoggerService.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["process.env.node_env",{"_index":397,"title":{},"body":{"classes/LoggerService.html":{}}}],["product",{"_index":262,"title":{"classes/Product.html":{}},"body":{"controllers/CustomController-1.html":{},"classes/Product.html":{},"injectables/Service-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["product.controller",{"_index":474,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.providers",{"_index":476,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.service",{"_index":272,"title":{},"body":{"controllers/CustomController-1.html":{},"modules/ProductModule.html":{}}}],["productid",{"_index":341,"title":{},"body":{"interfaces/IProduct.html":{},"classes/PostDeleteValidation-1.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":399,"title":{},"body":{"classes/LoggerService.html":{},"index.html":{}}}],["productmodule",{"_index":66,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":260,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["products'})@apiresponse({description",{"_index":263,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["productschema",{"_index":532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["producttype",{"_index":454,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["productvalidation",{"_index":275,"title":{"classes/ProductValidation.html":{}},"body":{"controllers/CustomController-1.html":{},"classes/PostDeleteValidation-1.html":{},"classes/ProductValidation.html":{},"coverage.html":{}}}],["progressive",{"_index":592,"title":{},"body":{"index.html":{}}}],["project",{"_index":628,"title":{},"body":{"index.html":{}}}],["project_model_provider",{"_index":497,"title":{},"body":{"injectables/Service-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectconnectiontoken",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":130,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/functions.html":{}}}],["properties",{"_index":77,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"classes/LoggerService.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["propname",{"_index":188,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["protected",{"_index":119,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["provide",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":475,"title":{},"body":{"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/DatabaseModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["public",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["query",{"_index":133,"title":{},"body":{"classes/BaseController.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["rate",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":637,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":112,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"classes/LoggerService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["record",{"_index":229,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["ref",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["refer",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":330,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["repository",{"_index":606,"title":{},"body":{"index.html":{}}}],["request",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/functions.html":{}}}],["request.url",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["require",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["response",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["response.status(500).json",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["restricted",{"_index":578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["restrictedguard",{"_index":478,"title":{"guards/RestrictedGuard.html":{}},"body":{"guards/RestrictedGuard.html":{},"coverage.html":{}}}],["result",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.error",{"_index":359,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["result.error.message.replace(/\"/g",{"_index":362,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["result.value",{"_index":365,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["results",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":141,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":481,"title":{},"body":{"guards/RestrictedGuard.html":{},"miscellaneous/enumerations.html":{}}}],["role.restricted",{"_index":490,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["run",{"_index":613,"title":{},"body":{"index.html":{}}}],["running",{"_index":611,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":301,"title":{},"body":{"guards/GuestGuard.html":{},"dependencies.html":{}}}],["scalable",{"_index":597,"title":{},"body":{"index.html":{}}}],["schema",{"_index":533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema.types.objectid",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["security",{"_index":484,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["server",{"_index":598,"title":{},"body":{"index.html":{}}}],["service",{"_index":100,"title":{"injectables/Service.html":{},"injectables/Service-1.html":{}},"body":{"modules/ArticleModule.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IMongooseDefaults.html":{},"modules/ProductModule.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["shall",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":599,"title":{},"body":{"index.html":{}}}],["silent",{"_index":390,"title":{},"body":{"classes/LoggerService.html":{}}}],["skip",{"_index":332,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["skip(perpage",{"_index":210,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["skipped",{"_index":334,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["soap",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sort",{"_index":209,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["sortby",{"_index":177,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["sorttype",{"_index":178,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"classes/ArticleDto.html":{},"modules/ArticleModule.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"modules/DatabaseModule.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"modules/PostModule.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"modules/ProductModule.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"index.html":{}}}],["sponsors",{"_index":631,"title":{},"body":{"index.html":{}}}],["src/.../article.providers.ts",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article.schema.ts",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../article.service.ts",{"_index":664,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../post.providers.ts",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../post.schema.ts",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product.providers.ts",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../product.schema.ts",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../security",{"_index":586,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../token.ts",{"_index":576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/constants.ts",{"_index":512,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/database.module.ts",{"_index":284,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":515,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/middleware/errors.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/middleware/errors.filter.ts:5",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["src/middleware/logger.ts",{"_index":366,"title":{},"body":{"classes/LoggerService.html":{},"coverage.html":{}}}],["src/middleware/logger.ts:35",{"_index":376,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/middleware/logger.ts:39",{"_index":373,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/middleware/logger.ts:43",{"_index":378,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/middleware/logger.ts:47",{"_index":377,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/middleware/logger.ts:5",{"_index":370,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/middleware/swagger.ts",{"_index":509,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/module/article/article.controller.ts",{"_index":224,"title":{},"body":{"controllers/CustomController.html":{},"coverage.html":{}}}],["src/module/article/article.controller.ts:24",{"_index":236,"title":{},"body":{"controllers/CustomController.html":{}}}],["src/module/article/article.controller.ts:30",{"_index":238,"title":{},"body":{"controllers/CustomController.html":{}}}],["src/module/article/article.controller.ts:35",{"_index":237,"title":{},"body":{"controllers/CustomController.html":{}}}],["src/module/article/article.module.ts",{"_index":101,"title":{},"body":{"modules/ArticleModule.html":{}}}],["src/module/article/article.providers.ts",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/article/article.service.ts",{"_index":312,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/module/article/article.service.ts:19",{"_index":491,"title":{},"body":{"injectables/Service.html":{}}}],["src/module/article/article.service.ts:26",{"_index":492,"title":{},"body":{"injectables/Service.html":{}}}],["src/module/article/article.service.ts:37",{"_index":494,"title":{},"body":{"injectables/Service.html":{}}}],["src/module/article/dto/article.dto.ts",{"_index":76,"title":{},"body":{"classes/ArticleDto.html":{},"coverage.html":{}}}],["src/module/article/dto/article.dto.ts:11",{"_index":89,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/dto/article.dto.ts:15",{"_index":88,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/dto/article.dto.ts:19",{"_index":90,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/dto/article.dto.ts:7",{"_index":85,"title":{},"body":{"classes/ArticleDto.html":{}}}],["src/module/article/interface/article.interface.ts",{"_index":306,"title":{},"body":{"interfaces/IArticle.html":{},"coverage.html":{}}}],["src/module/article/schema/article.schema.ts",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/model/controller.ts",{"_index":110,"title":{},"body":{"classes/BaseController.html":{},"coverage.html":{}}}],["src/module/model/controller.ts:11",{"_index":124,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/controller.ts:16",{"_index":132,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/controller.ts:21",{"_index":128,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/controller.ts:4",{"_index":121,"title":{},"body":{"classes/BaseController.html":{}}}],["src/module/model/model.ts",{"_index":147,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"coverage.html":{}}}],["src/module/model/model.ts:14",{"_index":309,"title":{},"body":{"interfaces/IBaseModelCtxInterface.html":{}}}],["src/module/model/model.ts:20",{"_index":154,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:21",{"_index":155,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:22",{"_index":151,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:35",{"_index":156,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:5",{"_index":310,"title":{},"body":{"interfaces/IBaseModelParamsInterface.html":{}}}],["src/module/model/model.ts:51",{"_index":166,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:76",{"_index":171,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/model/model.ts:98",{"_index":162,"title":{},"body":{"classes/BaseModel.html":{}}}],["src/module/post/dto/create",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{},"coverage.html":{}}}],["src/module/post/interface/post.interface.ts",{"_index":339,"title":{},"body":{"interfaces/IPost.html":{},"coverage.html":{}}}],["src/module/post/post.controller.ts",{"_index":423,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/module/post/post.controller.ts:27",{"_index":428,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/module/post/post.controller.ts:34",{"_index":430,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/module/post/post.controller.ts:42",{"_index":429,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/module/post/post.module.ts",{"_index":416,"title":{},"body":{"modules/PostModule.html":{}}}],["src/module/post/post.providers.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/post/post.service.ts",{"_index":437,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/module/post/post.service.ts:9",{"_index":439,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/module/post/schema/post.schema.ts",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/post/validation/post.validation.ts",{"_index":401,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostValidation.html":{},"coverage.html":{}}}],["src/module/post/validation/post.validation.ts:20",{"_index":402,"title":{},"body":{"classes/PostDeleteValidation.html":{}}}],["src/module/post/validation/post.validation.ts:6",{"_index":422,"title":{},"body":{"classes/PostValidation.html":{}}}],["src/module/product/dto/product.ts",{"_index":449,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/module/product/dto/product.ts:11",{"_index":464,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:15",{"_index":457,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:19",{"_index":456,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:24",{"_index":459,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:29",{"_index":460,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:34",{"_index":462,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:38",{"_index":465,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:42",{"_index":466,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:46",{"_index":467,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/dto/product.ts:7",{"_index":463,"title":{},"body":{"classes/Product.html":{}}}],["src/module/product/interface/product.interface.ts",{"_index":340,"title":{},"body":{"interfaces/IProduct.html":{},"coverage.html":{}}}],["src/module/product/product.controller.ts",{"_index":259,"title":{},"body":{"controllers/CustomController-1.html":{},"coverage.html":{}}}],["src/module/product/product.controller.ts:26",{"_index":264,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["src/module/product/product.controller.ts:33",{"_index":269,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["src/module/product/product.controller.ts:41",{"_index":267,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["src/module/product/product.module.ts",{"_index":473,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/module/product/product.providers.ts",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/product/product.service.ts",{"_index":495,"title":{},"body":{"injectables/Service-1.html":{},"coverage.html":{}}}],["src/module/product/product.service.ts:9",{"_index":496,"title":{},"body":{"injectables/Service-1.html":{}}}],["src/module/product/schema/product.schema.ts",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/module/product/validation/product.validation.ts",{"_index":411,"title":{},"body":{"classes/PostDeleteValidation-1.html":{},"classes/ProductValidation.html":{},"coverage.html":{}}}],["src/module/product/validation/product.validation.ts:21",{"_index":412,"title":{},"body":{"classes/PostDeleteValidation-1.html":{}}}],["src/module/product/validation/product.validation.ts:6",{"_index":477,"title":{},"body":{"classes/ProductValidation.html":{}}}],["src/security/guest.guard.ts",{"_index":290,"title":{},"body":{"guards/GuestGuard.html":{},"coverage.html":{}}}],["src/security/guest.guard.ts:8",{"_index":294,"title":{},"body":{"guards/GuestGuard.html":{}}}],["src/security/restricted.guard.ts",{"_index":479,"title":{},"body":{"guards/RestrictedGuard.html":{},"coverage.html":{}}}],["src/security/restricted.guard.ts:9",{"_index":480,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["src/security/security",{"_index":534,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/token.ts",{"_index":577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/validation/validation.pipe.ts",{"_index":344,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"coverage.html":{}}}],["src/validation/validation.pipe.ts:22",{"_index":347,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["src/validation/validation.pipe.ts:6",{"_index":351,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["stack",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["staging",{"_index":400,"title":{},"body":{"classes/LoggerService.html":{}}}],["start",{"_index":614,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":617,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":618,"title":{},"body":{"index.html":{}}}],["started",{"_index":591,"title":{"index.html":{}},"body":{}}],["starter",{"_index":605,"title":{},"body":{"index.html":{}}}],["statements",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["statuscode",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JoiValidationPipe.html":{}}}],["stay",{"_index":640,"title":{},"body":{"index.html":{}}}],["stderrlevels",{"_index":394,"title":{},"body":{"classes/LoggerService.html":{}}}],["storage",{"_index":579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["storage.service",{"_index":580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["store",{"_index":159,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["string",{"_index":86,"title":{},"body":{"classes/ArticleDto.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"classes/LoggerService.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/variables.html":{}}}],["successfully",{"_index":230,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["super(postmodel",{"_index":322,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["super(postsservice",{"_index":251,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["super.create(createdpost",{"_index":331,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["super.create(createpostdto",{"_index":281,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["super.create(values",{"_index":256,"title":{},"body":{"controllers/CustomController.html":{}}}],["super.delete(params",{"_index":283,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["super.delete(params.id",{"_index":258,"title":{},"body":{"controllers/CustomController.html":{}}}],["super.list(options",{"_index":335,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["super.list(query",{"_index":257,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["support",{"_index":624,"title":{},"body":{"index.html":{},"modules.html":{}}}],["sure",{"_index":328,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["svg",{"_index":651,"title":{},"body":{"modules.html":{}}}],["table",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":537,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":398,"title":{},"body":{"classes/LoggerService.html":{},"index.html":{}}}],["test:cov",{"_index":623,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":622,"title":{},"body":{"index.html":{}}}],["tests",{"_index":620,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":630,"title":{},"body":{"index.html":{}}}],["this.buildschema",{"_index":358,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["this.controller",{"_index":137,"title":{},"body":{"classes/BaseController.html":{}}}],["this.controller.create(values",{"_index":139,"title":{},"body":{"classes/BaseController.html":{}}}],["this.controller.delete(params.id",{"_index":145,"title":{},"body":{"classes/BaseController.html":{}}}],["this.controller.list(query",{"_index":142,"title":{},"body":{"classes/BaseController.html":{}}}],["this.instance",{"_index":387,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.error(message",{"_index":396,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.info(message",{"_index":395,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.isproductionenv",{"_index":381,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.istestenv",{"_index":391,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.logger",{"_index":191,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.logger.error(`${this.model.modelname}.create",{"_index":197,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.logger.error(`${this.model.modelname}.delete",{"_index":217,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.logger.error(`${this.model.modelname}.list",{"_index":213,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.logger.info(`${this.model.modelname}.delete",{"_index":214,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.logger.info(`${this.model.modelname}.list",{"_index":205,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model",{"_index":189,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model(values",{"_index":194,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model.find(params",{"_index":208,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model.findbyid(id).exec",{"_index":202,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.model.modelname",{"_index":203,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["this.postmodel(value",{"_index":325,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["this.type",{"_index":190,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["throw",{"_index":200,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/JoiValidationPipe.html":{}}}],["timestamp",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["timestamps",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":80,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"interfaces/IArticle.html":{},"interfaces/IPost.html":{},"classes/PostDeleteValidation.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":482,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["touch",{"_index":641,"title":{},"body":{"index.html":{}}}],["tprops",{"_index":319,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{},"miscellaneous/typealiases.html":{}}}],["transform",{"_index":346,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["transform(value",{"_index":348,"title":{},"body":{"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["transformer",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":392,"title":{},"body":{"classes/LoggerService.html":{}}}],["true",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":192,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["tslint:disable",{"_index":252,"title":{},"body":{"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"classes/PostDeleteValidation-1.html":{},"controllers/PostsController.html":{},"classes/ProductValidation.html":{}}}],["twitter",{"_index":647,"title":{},"body":{"index.html":{}}}],["type",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/ArticleDto.html":{},"classes/BaseController.html":{},"classes/BaseModel.html":{},"classes/CreatePostDto.html":{},"controllers/CustomController.html":{},"controllers/CustomController-1.html":{},"guards/GuestGuard.html":{},"interfaces/IArticle.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"interfaces/IProduct.html":{},"injectables/JoiValidationPipe.html":{},"classes/LoggerService.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"classes/Product.html":{},"classes/ProductValidation.html":{},"guards/RestrictedGuard.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":662,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":356,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["types",{"_index":183,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["types.objectid.isvalid(id",{"_index":201,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{}}}],["typescript",{"_index":572,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["unique",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":619,"title":{},"body":{"index.html":{}}}],["use",{"_index":326,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["usefactory",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usepipes",{"_index":270,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["usepipes(new",{"_index":282,"title":{},"body":{"controllers/CustomController-1.html":{},"controllers/PostsController.html":{}}}],["user",{"_index":163,"title":{},"body":{"classes/BaseModel.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/variables.html":{}}}],["userid",{"_index":81,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"interfaces/IArticle.html":{},"interfaces/IMongooseDefaults.html":{},"interfaces/IPost.html":{},"classes/PostDeleteValidation.html":{},"classes/PostValidation.html":{},"injectables/Service.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":333,"title":{},"body":{"interfaces/IMongooseDefaults.html":{},"injectables/Service.html":{}}}],["usetime",{"_index":455,"title":{},"body":{"classes/Product.html":{},"miscellaneous/variables.html":{}}}],["utils",{"_index":485,"title":{},"body":{"guards/RestrictedGuard.html":{}}}],["utils.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validation",{"_index":363,"title":{},"body":{"injectables/JoiValidationPipe.html":{}}}],["validation/post.validation",{"_index":434,"title":{},"body":{"controllers/PostsController.html":{}}}],["validation/product.validation",{"_index":277,"title":{},"body":{"controllers/CustomController-1.html":{}}}],["validation/validation.pipe",{"_index":406,"title":{},"body":{"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"classes/ProductValidation.html":{}}}],["validator",{"_index":93,"title":{},"body":{"classes/ArticleDto.html":{},"classes/CreatePostDto.html":{},"classes/Product.html":{},"dependencies.html":{}}}],["value",{"_index":176,"title":{},"body":{"classes/BaseModel.html":{},"injectables/JoiValidationPipe.html":{},"classes/PostDeleteValidation.html":{},"classes/PostDeleteValidation-1.html":{},"classes/PostValidation.html":{},"injectables/PostsService.html":{},"classes/ProductValidation.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":125,"title":{},"body":{"classes/BaseController.html":{},"classes/BaseModel.html":{},"controllers/CustomController.html":{},"interfaces/IBaseModelCtxInterface.html":{},"interfaces/IBaseModelParamsInterface.html":{},"injectables/PostsService.html":{},"injectables/Service.html":{},"injectables/Service-1.html":{}}}],["variable",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":665,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":374,"title":{},"body":{"classes/LoggerService.html":{},"miscellaneous/functions.html":{}}}],["watch",{"_index":615,"title":{},"body":{"index.html":{}}}],["website",{"_index":645,"title":{},"body":{"index.html":{}}}],["winston",{"_index":379,"title":{},"body":{"classes/LoggerService.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":388,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.colorize",{"_index":385,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.combine",{"_index":382,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.json",{"_index":384,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.simple",{"_index":386,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.timestamp",{"_index":383,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.logger",{"_index":371,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.transports.console",{"_index":393,"title":{},"body":{"classes/LoggerService.html":{}}}],["you'd",{"_index":634,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/ArticleModule.html":{},"modules/PostModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Middleware/errors.filter.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    catch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/Middleware/errors.filter.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, ExceptionFilter } from \"@nestjs/common\";\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter {\n  public catch(exception: any, host: ArgumentsHost): any {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception ? exception.getStatus() : 500;\n\n    response.status(500).json(\n      {\n        error: true,\n        message: exception.toString(),\n        path: request.url,\n        stack: exception,\n        statusCode: status,\n        timestamp: new Date().toISOString()\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ArticleModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            ProductModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PostModule } from \"./module/post/post.module\";\nimport { ArticleModule } from \"./module/article/article.module\";\nimport { ProductModule } from \"./module/product/product.module\";\n\n@Module({\n          imports: [PostModule, ArticleModule, ProductModule],\n        })\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ArticleDto.html":{"url":"classes/ArticleDto.html","title":"class - ArticleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ArticleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/dto/article.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                articleNumber\n                            \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            articleNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/article/dto/article.dto.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsInt } from \"class-validator\";\nimport { ApiModelProperty } from \"@nestjs/swagger\";\n\nexport class ArticleDto {\n  @IsInt()\n  @ApiModelProperty()\n  public articleNumber: number;\n\n  @IsString()\n  @ApiModelProperty()\n  public title: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public content: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArticleModule.html":{"url":"modules/ArticleModule.html","title":"module - ArticleModule","body":"\n                   \n\n\n\n\n    Modules\n    ArticleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\ncluster_ArticleModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nArticleModule\n\nArticleModule\n\nArticleModule -->\n\nDatabaseModule->ArticleModule\n\n\n\n\n\nService\n\nService\n\nArticleModule -->\n\nService->ArticleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/article/article.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { CustomController } from \"./article.controller\";\nimport { Service } from \"./article.service\";\nimport { DatabaseModule } from \"../../Database/database.module\";\nimport { articleProvider } from \"./article.providers\";\n\n@Module(\n  {\n    controllers: [CustomController],\n    imports: [DatabaseModule],\n    providers: [Service, ...articleProvider]\n  })\nexport class ArticleModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseController.html":{"url":"classes/BaseController.html","title":"class - BaseController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/controller.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                controller\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(controller: any)\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/controller.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controller\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            controller\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/Model/controller.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/module/Model/controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/module/Model/controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/module/Model/controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Body, Delete, Get, Param, Post, Query } from \"@nestjs/common\";\n\nexport abstract class BaseController {\n  private readonly controller: any;\n\n  protected constructor(controller: any) {\n    this.controller = controller;\n  }\n\n  @Post()\n  public create(@Body() values: any): any {\n    this.controller.create(values);\n  }\n\n  @Get()\n  public async list(@Query() query: any): Promise {\n    return this.controller.list(query);\n  }\n\n  @Delete(\":id\")\n  public async delete(@Param() params: any): Promise {\n    return this.controller.delete(params.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseModel.html":{"url":"classes/BaseModel.html","title":"class - BaseModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                model\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(data: any, type: any)\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/model.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/Model/model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Model\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/Model/model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/module/Model/model.ts:21\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:35\n                \n            \n\n\n            \n                \n                    This function creates and store values in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:98\n                \n            \n\n\n            \n                \n                    Delete user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:51\n                \n            \n\n\n            \n                \n                    Get Model information by Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(params: IBaseModelParamsInterface, ctx: IBaseModelCtxInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/module/Model/model.ts:76\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IBaseModelParamsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ctx\n                                    \n                                                IBaseModelCtxInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Model, Types } from \"mongoose\";\nimport { LoggerService } from \"../../Middleware/Logger\";\n\nexport interface IBaseModelParamsInterface {\n  options?: any;\n\n  [propName: string]: any;\n}\n\nexport interface IBaseModelCtxInterface {\n  page?: number;\n  perPage?: number;\n  sortBy?: string;\n  sortType?: number;\n\n  [propName: string]: any;\n}\n\nexport abstract class BaseModel {\n  private readonly model: Model;\n  private readonly type: any;\n  private readonly logger: LoggerService;\n\n  protected constructor(data: any, type: any) {\n    this.model = data;\n    this.type = type;\n    this.logger = new LoggerService();\n  }\n\n  /**\n   * This function creates and store values in the database\n   * @param values\n   */\n\n  public async create(values: any): Promise {\n    try {\n      const object = new this.model(values);\n      const data = await object.save();\n      return data;\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.create Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Get Model information by Id\n   * @param id\n   * @return Model\n   */\n  public async get(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model;\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @returns {Promise}\n   * @param params\n   * @param ctx\n   */\n  public list(\n    params: IBaseModelParamsInterface = {},\n    ctx: IBaseModelCtxInterface = { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n  ): any {\n    try {\n      this.logger.info(`${this.model.modelName}.list params=${params} ctx=${ctx}`);\n      const { perPage, page, sortBy, sortType } = ctx;\n      return this.model.find(params)\n        .sort({ [sortBy]: sortType })\n        .skip(perPage * (page - 1))\n        .limit(perPage)\n        .exec();\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.list Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Delete user\n   * @public\n   */\n  public async delete(id: string): Promise {\n    try {\n      this.logger.info(`${this.model.modelName}.delete id=${id}`);\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model.remove();\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.delete id=${id} Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/dto/create-post.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                content\n                            \n                            \n                                    Public\n                                title\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/post/dto/create-post.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/post/dto/create-post.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/post/dto/create-post.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from \"class-validator\";\nimport { ApiModelProperty } from \"@nestjs/swagger\";\n\nexport class CreatePostDto {\n  @IsString()\n  @ApiModelProperty()\n  public title: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public content: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomController.html":{"url":"controllers/CustomController.html","title":"controller - CustomController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                article\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: ArticleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({title: 'Create Article'})@ApiResponse({description: 'The record has been successfully created.', status: 201})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                ArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/module/article/article.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Delete } from \"@nestjs/common\";\nimport { ArticleDto } from \"./dto/article.dto\";\nimport { Service } from \"./article.service\";\nimport { IArticle as Interface } from \"./interface/article.interface\";\nimport { BaseController } from \"../Model/controller\";\nimport { ApiUseTags, ApiOperation, ApiResponse } from \"@nestjs/swagger\";\n\n@ApiUseTags(\"Article\")\n@Controller(\"article\")\nexport class CustomController extends BaseController {\n  constructor(private readonly postsService: Service) {\n    super(postsService);\n  }\n\n  // tslint:disable-next-line\n  @Post()\n  @ApiOperation({ title: \"Create Article\" })\n  @ApiResponse(\n    {\n      description: \"The record has been successfully created.\",\n      status: 201\n    })\n  @ApiResponse({ status: 403, description: \"Forbidden.\" })\n  public create(@Body() values: ArticleDto): any {\n    return super.create(values);\n  }\n\n  // tslint:disable-next-line\n  @Get()\n  public async list(@Query() query: Interface): Promise {\n    return super.list(query);\n  }\n\n  @Delete(\":id\")\n  public delete(@Param() params: Interface): any {\n    return super.delete(params.id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CustomController-1.html":{"url":"controllers/CustomController-1.html","title":"controller - CustomController-1","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CustomController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPostDto: Product)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({title: 'Create Products'})@ApiResponse({description: 'The record has been successfully created.', status: 201})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/module/product/product.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Product\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params: Product)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UsePipes(new PostDeleteValidation())@ApiOperation({title: 'Delete Products'})\n                \n            \n\n            \n                \n                    Defined in src/module/product/product.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: Product)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({title: 'List Products'})\n                \n            \n\n            \n                \n                    Defined in src/module/product/product.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                                Product\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Delete, UsePipes } from \"@nestjs/common\";\nimport { Product } from \"./dto/product\";\nimport { Service } from \"./product.service\";\nimport { IProduct as Interface } from \"./interface/product.interface\";\nimport { BaseController } from \"../Model/controller\";\nimport { ProductValidation, PostDeleteValidation } from \"./Validation/product.validation\";\nimport { ApiBearerAuth, ApiUseTags, ApiOperation, ApiResponse } from \"@nestjs/swagger\";\n\n@ApiUseTags(\"Products\")\n@Controller(\"products\")\n@ApiBearerAuth()\nexport class CustomController extends BaseController {\n  constructor(private readonly postsService: Service) {\n    super(postsService);\n  }\n\n  // tslint:disable-next-line\n  @Post()\n  @ApiOperation({ title: \"Create Products\" })\n  @ApiResponse(\n    {\n      description: \"The record has been successfully created.\",\n      status: 201\n    })\n  @ApiResponse({ status: 403, description: \"Forbidden.\" })\n  public create(@Body() createPostDto: Product): Product {\n    return super.create(createPostDto);\n  }\n\n  // tslint:disable-next-line\n  @Get()\n  @ApiOperation({ title: \"List Products\" })\n  public async list(@Query() query: Product): Promise {\n    return super.list(query);\n  }\n\n  // tslint:disable-next-line\n  @Delete(\":id\")\n  @UsePipes(new PostDeleteValidation())\n  @ApiOperation({ title: \"Delete Products\" })\n  public delete(@Param() params: Product): any {\n    return super.delete(params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Database/database.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { databaseProviders } from \"./database.providers\";\n\n@Module({\n          exports: [...databaseProviders],\n          providers: [...databaseProviders]\n        })\nexport class DatabaseModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/GuestGuard.html":{"url":"guards/GuestGuard.html","title":"guard - GuestGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    GuestGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/security/guest.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/security/guest.guard.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\nimport * as _ from \"lodash\";\nimport { Observable } from \"rxjs\";\n\n@Injectable()\nexport class GuestGuard implements CanActivate {\n\n  public canActivate(context: ExecutionContext): boolean | Promise | Observable {\n\n    const header = context.switchToHttp().getRequest().header(\"Authorization\");\n    return _.isEmpty(header);\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IArticle.html":{"url":"interfaces/IArticle.html","title":"interface - IArticle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IArticle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/interface/article.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        articleNumber\n                                \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articleNumber\n                                    \n                                \n                                \n                                    \n                                        articleNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nexport interface IArticle extends Document {\n  readonly articleNumber: number;\n  readonly title: string;\n  readonly content: string;\n  readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseModelCtxInterface.html":{"url":"interfaces/IBaseModelCtxInterface.html","title":"interface - IBaseModelCtxInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseModelCtxInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        perPage\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        sortType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [propName: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/model.ts:14\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        perPage\n                                    \n                                \n                                \n                                    \n                                        perPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortType\n                                    \n                                \n                                \n                                    \n                                        sortType:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model, Types } from \"mongoose\";\nimport { LoggerService } from \"../../Middleware/Logger\";\n\nexport interface IBaseModelParamsInterface {\n  options?: any;\n\n  [propName: string]: any;\n}\n\nexport interface IBaseModelCtxInterface {\n  page?: number;\n  perPage?: number;\n  sortBy?: string;\n  sortType?: number;\n\n  [propName: string]: any;\n}\n\nexport abstract class BaseModel {\n  private readonly model: Model;\n  private readonly type: any;\n  private readonly logger: LoggerService;\n\n  protected constructor(data: any, type: any) {\n    this.model = data;\n    this.type = type;\n    this.logger = new LoggerService();\n  }\n\n  /**\n   * This function creates and store values in the database\n   * @param values\n   */\n\n  public async create(values: any): Promise {\n    try {\n      const object = new this.model(values);\n      const data = await object.save();\n      return data;\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.create Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Get Model information by Id\n   * @param id\n   * @return Model\n   */\n  public async get(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model;\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @returns {Promise}\n   * @param params\n   * @param ctx\n   */\n  public list(\n    params: IBaseModelParamsInterface = {},\n    ctx: IBaseModelCtxInterface = { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n  ): any {\n    try {\n      this.logger.info(`${this.model.modelName}.list params=${params} ctx=${ctx}`);\n      const { perPage, page, sortBy, sortType } = ctx;\n      return this.model.find(params)\n        .sort({ [sortBy]: sortType })\n        .skip(perPage * (page - 1))\n        .limit(perPage)\n        .exec();\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.list Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Delete user\n   * @public\n   */\n  public async delete(id: string): Promise {\n    try {\n      this.logger.info(`${this.model.modelName}.delete id=${id}`);\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model.remove();\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.delete id=${id} Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseModelParamsInterface.html":{"url":"interfaces/IBaseModelParamsInterface.html","title":"interface - IBaseModelParamsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IBaseModelParamsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/Model/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [propName: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/module/Model/model.ts:5\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model, Types } from \"mongoose\";\nimport { LoggerService } from \"../../Middleware/Logger\";\n\nexport interface IBaseModelParamsInterface {\n  options?: any;\n\n  [propName: string]: any;\n}\n\nexport interface IBaseModelCtxInterface {\n  page?: number;\n  perPage?: number;\n  sortBy?: string;\n  sortType?: number;\n\n  [propName: string]: any;\n}\n\nexport abstract class BaseModel {\n  private readonly model: Model;\n  private readonly type: any;\n  private readonly logger: LoggerService;\n\n  protected constructor(data: any, type: any) {\n    this.model = data;\n    this.type = type;\n    this.logger = new LoggerService();\n  }\n\n  /**\n   * This function creates and store values in the database\n   * @param values\n   */\n\n  public async create(values: any): Promise {\n    try {\n      const object = new this.model(values);\n      const data = await object.save();\n      return data;\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.create Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Get Model information by Id\n   * @param id\n   * @return Model\n   */\n  public async get(id: string): Promise {\n    try {\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model;\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @returns {Promise}\n   * @param params\n   * @param ctx\n   */\n  public list(\n    params: IBaseModelParamsInterface = {},\n    ctx: IBaseModelCtxInterface = { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n  ): any {\n    try {\n      this.logger.info(`${this.model.modelName}.list params=${params} ctx=${ctx}`);\n      const { perPage, page, sortBy, sortType } = ctx;\n      return this.model.find(params)\n        .sort({ [sortBy]: sortType })\n        .skip(perPage * (page - 1))\n        .limit(perPage)\n        .exec();\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.list Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n\n  /**\n   * Delete user\n   * @public\n   */\n  public async delete(id: string): Promise {\n    try {\n      this.logger.info(`${this.model.modelName}.delete id=${id}`);\n      let model;\n\n      if (Types.ObjectId.isValid(id)) {\n        model = await this.model.findById(id).exec();\n      }\n      if (model) {\n        return model.remove();\n      }\n      throw new Error(\n        `ID: ${id} for model ${this.model.modelName} not found`\n      );\n    } catch (error) {\n      this.logger.error(`${this.model.modelName}.delete id=${id} Failed. Error Details :  ${error}`);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IMongooseDefaults.html":{"url":"interfaces/IMongooseDefaults.html","title":"interface - IMongooseDefaults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IMongooseDefaults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        IBaseModelParamsInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        articleNumber\n                                \n                                \n                                            Optional\n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        articleNumber\n                                    \n                                \n                                \n                                    \n                                        articleNumber:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport * as lodash from \"lodash\";\n\nconst { omitBy, isNil } = lodash;\nimport { IArticle } from \"./interface/article.interface\";\nimport { ArticleDto } from \"./dto/article.dto\";\nimport { ARTICLE_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel, IBaseModelParamsInterface } from \"../Model/model\";\n\ninterface IMongooseDefaults extends IBaseModelParamsInterface {\n  userId?: string;\n  articleNumber?: number;\n}\n\ntype TProps = IArticle & IMongooseDefaults;\n\n@Injectable()\nexport class Service extends BaseModel {\n\n  constructor(\n    @Inject(ARTICLE_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, ArticleDto);\n  }\n\n  public create(value: ArticleDto): any {\n    const createdPost = new this.postModel(value); // Use this to make sure the type is correct, can remove this by default\n    return super.create(createdPost);\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @param {number} skip - Number of users to be skipped.\n   * @returns {Promise}\n   */\n  public list({ userId, articleNumber }: TProps): any {\n    const options = omitBy({ userId, articleNumber }, isNil);\n    return super.list(options, { sortType: 1 }); // overwritten sort type to be Ascending\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPost.html":{"url":"interfaces/IPost.html","title":"interface - IPost","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPost\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/interface/post.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        content\n                                \n                                \n                                        title\n                                \n                                \n                                        userId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nexport interface IPost extends Document {\n  readonly title: string;\n  readonly content: string;\n  readonly userId: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IProduct.html":{"url":"interfaces/IProduct.html","title":"interface - IProduct","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IProduct\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/product/interface/product.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        name\n                                \n                                \n                                        productId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productId\n                                    \n                                \n                                \n                                    \n                                        productId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nexport interface IProduct extends Document {\n  readonly name: string;\n  readonly productId: string;\n  readonly description: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JoiValidationPipe.html":{"url":"injectables/JoiValidationPipe.html","title":"injectable - JoiValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JoiValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Validation/validation.pipe.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                buildSchema\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/Validation/validation.pipe.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/Validation/validation.pipe.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import * as Joi from \"joi\";\nimport { PipeTransform, Injectable, ArgumentMetadata, HttpException, HttpStatus } from \"@nestjs/common\";\n\n@Injectable()\nexport abstract class JoiValidationPipe implements PipeTransform {\n  public transform(value: any, metadata: ArgumentMetadata): typeof value {\n    const result = Joi.validate(value, this.buildSchema());\n\n    if (result.error !== null) {\n      throw new HttpException(\n        {\n          detail: result.error.message.replace(/\"/g, `'`),\n          message: \"Validation failed\",\n          statusCode: HttpStatus.BAD_REQUEST\n        },\n        HttpStatus.BAD_REQUEST);\n    }\n\n    return result.value;\n  }\n\n  public abstract buildSchema(): object;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerService.html":{"url":"classes/LoggerService.html","title":"class - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Middleware/Logger.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Private\n                                isProductionEnv\n                            \n                            \n                                    Private\n                                isTestEnv\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/Middleware/Logger.ts:5\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            instance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     winston.Logger\n\n                        \n                    \n                        \n                            \n                                    Defined in src/Middleware/Logger.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            error\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Middleware/Logger.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            info\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Middleware/Logger.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isProductionEnv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isProductionEnv()\n                \n            \n\n\n            \n                \n                    Defined in src/Middleware/Logger.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isTestEnv\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isTestEnv()\n                \n            \n\n\n            \n                \n                    Defined in src/Middleware/Logger.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as winston from \"winston\";\n\nexport class LoggerService {\n\n  private readonly instance: winston.Logger;\n\n  public constructor() {\n\n    const format = this.isProductionEnv() ?\n      winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.json()\n      ) :\n      winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.colorize(),\n        winston.format.simple()\n      );\n\n    this.instance = winston.createLogger(\n      {\n        format,\n        level: \"info\",\n        silent: this.isTestEnv(),\n        transports: [\n          new winston.transports.Console(\n            {\n              stderrLevels: [\"error\"]\n            })\n        ]\n      }\n    );\n  }\n\n  public info(message: string): void {\n    this.instance.info(message);\n  }\n\n  public error(message: string): void {\n    this.instance.error(message);\n  }\n\n  private isTestEnv(): boolean {\n    return process.env.NODE_ENV === \"test\";\n  }\n\n  private isProductionEnv(): boolean {\n    return process.env.NODE_ENV === \"production\" || process.env.NODE_ENV === \"staging\";\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostDeleteValidation.html":{"url":"classes/PostDeleteValidation.html","title":"class - PostDeleteValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostDeleteValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/Validation/post.validation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        JoiValidationPipe\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildSchema\n                            \n                            \n                                    Public\n                                    Abstract\n                                buildSchema\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/module/post/Validation/post.validation.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Joi from \"joi\";\nimport { JoiValidationPipe } from \"../../../Validation/validation.pipe\";\n\nexport class PostValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        content: Joi.string().required().max(50),\n        title: Joi.string().required(),\n        userId: Joi.string().required()\n      });\n\n  }\n}\n\nexport class PostDeleteValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        id: Joi.string().required()\n      });\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostDeleteValidation-1.html":{"url":"classes/PostDeleteValidation-1.html","title":"class - PostDeleteValidation-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostDeleteValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/product/Validation/product.validation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        JoiValidationPipe\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildSchema\n                            \n                            \n                                    Public\n                                    Abstract\n                                buildSchema\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/module/product/Validation/product.validation.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Joi from \"joi\";\nimport { JoiValidationPipe } from \"../../../Validation/validation.pipe\";\n\nexport class ProductValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        description: Joi.string().required(),\n        name: Joi.string().required().max(50),\n        productId: Joi.string().required()\n      });\n\n  }\n}\n\n// tslint:disable-next-line\nexport class PostDeleteValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        id: Joi.string().required()\n      });\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostModule\n\n\n\ncluster_PostModule_imports\n\n\n\ncluster_PostModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nDatabaseModule->PostModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostModule -->\n\nPostsService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/post/post.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { PostsController } from \"./post.controller\";\nimport { PostsService } from \"./post.service\";\nimport { postsProviders } from \"./post.providers\";\nimport { DatabaseModule } from \"../../Database/database.module\";\n\n@Module(\n  {\n    controllers: [PostsController],\n    imports: [DatabaseModule],\n    providers: [\n      PostsService,\n      ...postsProviders\n    ]\n  })\nexport class PostModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PostValidation.html":{"url":"classes/PostValidation.html","title":"class - PostValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PostValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/Validation/post.validation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        JoiValidationPipe\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildSchema\n                            \n                            \n                                    Public\n                                    Abstract\n                                buildSchema\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/module/post/Validation/post.validation.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Joi from \"joi\";\nimport { JoiValidationPipe } from \"../../../Validation/validation.pipe\";\n\nexport class PostValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        content: Joi.string().required().max(50),\n        title: Joi.string().required(),\n        userId: Joi.string().required()\n      });\n\n  }\n}\n\nexport class PostDeleteValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        id: Joi.string().required()\n      });\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/post.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new PostValidation())@ApiOperation({title: 'Create Posts'})@ApiResponse({description: 'The record has been successfully created.', status: 201})@ApiResponse({status: 403, description: 'Forbidden.'})\n                \n            \n\n            \n                \n                    Defined in src/module/post/post.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPostDto\n                                    \n                                                CreatePostDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(params: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UsePipes(new PostDeleteValidation())@ApiOperation({title: 'Delete Posts'})\n                \n            \n\n            \n                \n                    Defined in src/module/post/post.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(query: Interface)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({title: 'List Posts'})\n                \n            \n\n            \n                \n                    Defined in src/module/post/post.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n                                    \n                                            Interface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Param, Query, Delete, UsePipes } from \"@nestjs/common\";\nimport { CreatePostDto } from \"./dto/create-post.dto\";\nimport { PostsService } from \"./post.service\";\nimport { IPost as Interface } from \"./interface/post.interface\";\nimport { BaseController } from \"../Model/controller\";\nimport { PostValidation, PostDeleteValidation } from \"./Validation/post.validation\";\nimport { ApiBearerAuth, ApiUseTags, ApiOperation, ApiResponse } from \"@nestjs/swagger\";\n\n@ApiUseTags(\"Posts\")\n@Controller(\"posts\")\n@ApiBearerAuth()\nexport class PostsController extends BaseController {\n  constructor(private readonly postsService: PostsService) {\n    super(postsService);\n  }\n\n  // tslint:disable-next-line\n  @Post()\n  @UsePipes(new PostValidation())\n  @ApiOperation({ title: \"Create Posts\" })\n  @ApiResponse(\n    {\n      description: \"The record has been successfully created.\",\n      status: 201\n    })\n  @ApiResponse({ status: 403, description: \"Forbidden.\" })\n  public async create(@Body() createPostDto: CreatePostDto): Promise {\n    return await super.create(createPostDto);\n  }\n\n  // tslint:disable-next-line\n  @Get()\n  @ApiOperation({ title: \"List Posts\" })\n  public async list(@Query() query: Interface): Promise {\n    return super.list(query);\n  }\n\n  // tslint:disable-next-line\n  @Delete(\":id\")\n  @UsePipes(new PostDeleteValidation())\n  @ApiOperation({ title: \"Delete Posts\" })\n  public delete(@Param() params: Interface): any {\n    return super.delete(params);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/post/post.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                model\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/module/post/post.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:35\n\n                \n            \n\n\n            \n                \n                    This function creates and store values in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:98\n\n                \n            \n\n\n            \n                \n                    Delete user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:51\n\n                \n            \n\n\n            \n                \n                    Get Model information by Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(params: IBaseModelParamsInterface, ctx: IBaseModelCtxInterface)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:76\n\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IBaseModelParamsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ctx\n                                    \n                                                IBaseModelCtxInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Model\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:21\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport { IPost } from \"./interface/post.interface\";\nimport { CreatePostDto } from \"./dto/create-post.dto\";\nimport { POST_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel } from \"../Model/model\";\n\n@Injectable()\nexport class PostsService extends BaseModel {\n  constructor(\n    @Inject(POST_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, CreatePostDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/product/dto/product.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdBy\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                    Optional\n                                isActive\n                            \n                            \n                                    Public\n                                isDeleted\n                            \n                            \n                                    Public\n                                masterProductId\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                productId\n                            \n                            \n                                    Public\n                                productType\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                useTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createdBy\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            isActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDeleted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsBoolean()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            masterProductId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            productType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            useTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsString()@ApiModelProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/module/product/dto/product.ts:46\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, IsBoolean, IsOptional } from \"class-validator\";\nimport { ApiModelProperty } from \"@nestjs/swagger\";\n\nexport class Product {\n  @IsString()\n  @ApiModelProperty()\n  public name: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public productId: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public description: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public createdBy: string;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiModelProperty()\n  public isActive?: boolean;\n\n  @IsOptional()\n  @IsBoolean()\n  @ApiModelProperty()\n  public isDeleted: boolean;\n\n  @IsOptional()\n  @IsString()\n  @ApiModelProperty()\n  public masterProductId: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public productType: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public type: string;\n\n  @IsString()\n  @ApiModelProperty()\n  public useTime: string;\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_imports\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nDatabaseModule->ProductModule\n\n\n\n\n\nService\n\nService\n\nProductModule -->\n\nService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/module/product/product.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Service\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CustomController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { CustomController } from \"./product.controller\";\nimport { Service } from \"./product.service\";\nimport { Provider } from \"./product.providers\";\nimport { DatabaseModule } from \"../../Database/database.module\";\n\n@Module(\n  {\n    controllers: [CustomController],\n    imports: [DatabaseModule],\n    providers: [\n      Service,\n      ...Provider\n    ]\n  })\nexport class ProductModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductValidation.html":{"url":"classes/ProductValidation.html","title":"class - ProductValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/product/Validation/product.validation.ts\n        \n\n\n            \n                Extends\n            \n            \n                        JoiValidationPipe\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                buildSchema\n                            \n                            \n                                    Public\n                                    Abstract\n                                buildSchema\n                            \n                            \n                                    Public\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Defined in src/module/product/Validation/product.validation.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            buildSchema\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    buildSchema()\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Inherited from         JoiValidationPipe\n\n                \n            \n            \n                \n                        Defined in         JoiValidationPipe:6\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as Joi from \"joi\";\nimport { JoiValidationPipe } from \"../../../Validation/validation.pipe\";\n\nexport class ProductValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        description: Joi.string().required(),\n        name: Joi.string().required().max(50),\n        productId: Joi.string().required()\n      });\n\n  }\n}\n\n// tslint:disable-next-line\nexport class PostDeleteValidation extends JoiValidationPipe {\n\n  public buildSchema(): object {\n\n    return Joi.object(\n      {\n        id: Joi.string().required()\n      });\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RestrictedGuard.html":{"url":"guards/RestrictedGuard.html","title":"guard - RestrictedGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RestrictedGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/security/restricted.guard.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/security/restricted.guard.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from \"@nestjs/common\";\n\nimport { Role } from \"../token\";\nimport { extractTokenPayload } from \"./security-utils\";\n\n@Injectable()\nexport class RestrictedGuard implements CanActivate {\n\n  public canActivate(context: ExecutionContext): boolean {\n\n    const payload = extractTokenPayload(context.switchToHttp().getRequest());\n\n    if (!payload) {\n      return false;\n    }\n\n    return (payload.role === Role.RESTRICTED);\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Service.html":{"url":"injectables/Service.html","title":"injectable - Service","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/article/article.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                model\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                list\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/module/article/article.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(value: ArticleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                ArticleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(undefined: TProps)\n                \n            \n\n\n            \n                \n                    Defined in src/module/article/article.service.ts:37\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                TProps\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:35\n\n                \n            \n\n\n            \n                \n                    This function creates and store values in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:98\n\n                \n            \n\n\n            \n                \n                    Delete user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:51\n\n                \n            \n\n\n            \n                \n                    Get Model information by Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(params: IBaseModelParamsInterface, ctx: IBaseModelCtxInterface)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:76\n\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IBaseModelParamsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ctx\n                                    \n                                                IBaseModelCtxInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Model\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:21\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport * as lodash from \"lodash\";\n\nconst { omitBy, isNil } = lodash;\nimport { IArticle } from \"./interface/article.interface\";\nimport { ArticleDto } from \"./dto/article.dto\";\nimport { ARTICLE_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel, IBaseModelParamsInterface } from \"../Model/model\";\n\ninterface IMongooseDefaults extends IBaseModelParamsInterface {\n  userId?: string;\n  articleNumber?: number;\n}\n\ntype TProps = IArticle & IMongooseDefaults;\n\n@Injectable()\nexport class Service extends BaseModel {\n\n  constructor(\n    @Inject(ARTICLE_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, ArticleDto);\n  }\n\n  public create(value: ArticleDto): any {\n    const createdPost = new this.postModel(value); // Use this to make sure the type is correct, can remove this by default\n    return super.create(createdPost);\n  }\n\n  /**\n   * List Model in descending order of 'createdAt' timestamp.\n   *\n   * @param {number} skip - Number of users to be skipped.\n   * @returns {Promise}\n   */\n  public list({ userId, articleNumber }: TProps): any {\n    const options = omitBy({ userId, articleNumber }, isNil);\n    return super.list(options, { sortType: 1 }); // overwritten sort type to be Ascending\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Service-1.html":{"url":"injectables/Service-1.html","title":"injectable - Service-1","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/module/product/product.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                model\n                            \n                            \n                                    Private\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                list\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(postModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/module/product/product.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        postModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(values: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:35\n\n                \n            \n\n\n            \n                \n                    This function creates and store values in the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:98\n\n                \n            \n\n\n            \n                \n                    Delete user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:51\n\n                \n            \n\n\n            \n                \n                    Get Model information by Id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Model\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            list\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    list(params: IBaseModelParamsInterface, ctx: IBaseModelCtxInterface)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseModel\n\n                \n            \n            \n                \n                        Defined in         BaseModel:76\n\n                \n            \n\n\n            \n                \n                    List Model in descending order of 'createdAt' timestamp.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                IBaseModelParamsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    ctx\n                                    \n                                                IBaseModelCtxInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        { sortBy: \"createdAt\", sortType: -1, perPage: 30, page: 1 }\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggerService\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Model\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:20\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseModel\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseModel:21\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Model } from \"mongoose\";\nimport { Injectable, Inject } from \"@nestjs/common\";\nimport { IProduct } from \"./interface/product.interface\";\nimport { Product } from \"./dto/product\";\nimport { PROJECT_MODEL_PROVIDER } from \"../../constants\";\nimport { BaseModel } from \"../Model/model\";\n\n@Injectable()\nexport class Service extends BaseModel {\n  constructor(\n    @Inject(PROJECT_MODEL_PROVIDER) private readonly postModel: Model) {\n    super(postModel, Product);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Middleware/Logger.ts\n            \n            class\n            LoggerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/Middleware/errors.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Middleware/swagger.ts\n            \n            function\n            createSwagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Validation/validation.pipe.ts\n            \n            injectable\n            JoiValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            ARTICLE_MODEL_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            CAT_MODEL_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            DB_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            POST_MODEL_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/constants.ts\n            \n            variable\n            PROJECT_MODEL_PROVIDER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/Model/controller.ts\n            \n            class\n            BaseController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/module/Model/model.ts\n            \n            class\n            BaseModel\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/module/Model/model.ts\n            \n            interface\n            IBaseModelCtxInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/Model/model.ts\n            \n            interface\n            IBaseModelParamsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/module/article/article.controller.ts\n            \n            controller\n            CustomController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/article/article.providers.ts\n            \n            variable\n            articleProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/article/article.service.ts\n            \n            injectable\n            Service\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/module/article/article.service.ts\n            \n            interface\n            IMongooseDefaults\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/module/article/article.service.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/article/dto/article.dto.ts\n            \n            class\n            ArticleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/article/interface/article.interface.ts\n            \n            interface\n            IArticle\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/module/article/schema/article.schema.ts\n            \n            variable\n            ArticleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/post/Validation/post.validation.ts\n            \n            class\n            PostDeleteValidation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/Validation/post.validation.ts\n            \n            class\n            PostValidation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/dto/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/interface/post.interface.ts\n            \n            interface\n            IPost\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/post.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/post/post.providers.ts\n            \n            variable\n            postsProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/post/post.service.ts\n            \n            injectable\n            PostsService\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/module/post/schema/post.schema.ts\n            \n            variable\n            PostSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/product/Validation/product.validation.ts\n            \n            class\n            PostDeleteValidation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/product/Validation/product.validation.ts\n            \n            class\n            ProductValidation\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/product/dto/product.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/module/product/interface/product.interface.ts\n            \n            interface\n            IProduct\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/product/product.controller.ts\n            \n            controller\n            CustomController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/module/product/product.providers.ts\n            \n            variable\n            Provider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/product/product.service.ts\n            \n            injectable\n            Service\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/module/product/schema/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/module/product/schema/product.schema.ts\n            \n            variable\n            Schema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/security/guest.guard.ts\n            \n            guard\n            GuestGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/security/restricted.guard.ts\n            \n            guard\n            RestrictedGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/security/security-utils.ts\n            \n            function\n            extractTokenPayload\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/security/security-utils.ts\n            \n            variable\n            PAYLOAD_COMPONENTS\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^5.4.0\n        \n            @nestjs/core : ^5.4.0\n        \n            @nestjs/mongoose : ^6.0.0\n        \n            @nestjs/platform-fastify : ^6.0.1\n        \n            @nestjs/swagger : ^3.0.1\n        \n            class-transformer : ^0.2.0\n        \n            class-validator : ^0.9.1\n        \n            compression : ^1.7.4\n        \n            dotenv : ^7.0.0\n        \n            express : ^4.16.4\n        \n            express-rate-limit : ^3.4.0\n        \n            helmet : ^3.16.0\n        \n            joi : ^14.3.1\n        \n            jsonwebtoken : ^8.5.1\n        \n            lodash : ^4.17.11\n        \n            mongoose : ^5.4.19\n        \n            reflect-metadata : ^0.1.12\n        \n            rimraf : ^2.6.2\n        \n            rxjs : ^6.2.2\n        \n            typescript : ^3.0.1\n        \n            winston : ^3.2.1\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Role   (src/.../token.ts)\n                        \n                        \n                            Service   (src/.../token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/token.ts\n    \n        \n            \n                \n                    \n                        \n                        Role\n                    \n                \n                        \n                            \n                                 RESTRICTED\n                            \n                        \n                        \n                            \n                                Value : restricted\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Service\n                    \n                \n                        \n                            \n                                 STORAGE\n                            \n                        \n                        \n                            \n                                Value : storage.service\n                            \n                        \n                        \n                            \n                                 CONFIG\n                            \n                        \n                        \n                            \n                                Value : config.service\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createSwagger   (src/.../swagger.ts)\n                        \n                        \n                            extractTokenPayload   (src/.../security-utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    src/Middleware/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createSwagger\n                        \n                        \n                    \n                \n            \n            \n                \ncreateSwagger(app)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/security/security-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            extractTokenPayload\n                        \n                        \n                    \n                \n            \n            \n                \nextractTokenPayload(request)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nbash\n$ npm install\nRunning the app\n```bash\ndevelopment\n$ npm run start\nwatch mode\n$ npm run start:dev\nproduction mode\n$ npm run start:prod\n```\nTest\n```bash\nunit tests\n$ npm run test\ne2e tests\n$ npm run test:e2e\ntest coverage\n$ npm run test:cov\n```\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArticleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_ArticleModule\n\n\n\ncluster_ArticleModule_imports\n\n\n\ncluster_ArticleModule_providers\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_providers\n\n\n\n\nArticleModule\n\nArticleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nArticleModule->AppModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nAppModule -->\n\nPostModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nArticleModule -->\n\nDatabaseModule->ArticleModule\n\n\n\nPostModule -->\n\nDatabaseModule->PostModule\n\n\n\nProductModule -->\n\nDatabaseModule->ProductModule\n\n\n\n\n\nService\n\nService\n\nArticleModule -->\n\nService->ArticleModule\n\n\n\nProductModule -->\n\nService->ProductModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostModule -->\n\nPostsService->PostModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TProps   (src/.../article.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/module/article/article.service.ts\n    \n    \n        \n            \n                \n                    \n                    TProps\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ARTICLE_MODEL_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            articleProvider   (src/.../article.providers.ts)\n                        \n                        \n                            ArticleSchema   (src/.../article.schema.ts)\n                        \n                        \n                            CAT_MODEL_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            DB_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            PAYLOAD_COMPONENTS   (src/.../security-utils.ts)\n                        \n                        \n                            POST_MODEL_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            PostSchema   (src/.../post.schema.ts)\n                        \n                        \n                            postsProviders   (src/.../post.providers.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            PROJECT_MODEL_PROVIDER   (src/.../constants.ts)\n                        \n                        \n                            Provider   (src/.../product.providers.ts)\n                        \n                        \n                            Schema   (src/.../product.schema.ts)\n                        \n                        \n                               (src/.../article.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ARTICLE_MODEL_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"ArticleConnectionToken\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CAT_MODEL_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"CatConnectionToken\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DB_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"DbConnectionToken\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POST_MODEL_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"PostConnectionToken\"\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROJECT_MODEL_PROVIDER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"ProjectConnectionToken\"\n                        \n                    \n\n\n            \n        \n\n    src/module/article/article.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            articleProvider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    inject: [DB_PROVIDER],\n    provide: ARTICLE_MODEL_PROVIDER,\n    useFactory: (connection: Connection) => connection.model(\"Article\", ArticleSchema)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/module/article/schema/article.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ArticleSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema(\n  {\n    articleNumber: {\n      require: true,\n      type: Number\n    },\n    content: {\n      required: false,\n      type: String\n    },\n    title: {\n      required: true,\n      type: String,\n      unique: true\n    },\n    userId: {\n      required: true,\n      type: mongoose.SchemaTypes.ObjectId\n    }\n  },\n  {\n    timestamps: true\n  }\n)\n                        \n                    \n\n\n            \n        \n\n    src/Database/database.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            databaseProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: DB_PROVIDER,\n    useFactory: async () => {\n      (mongoose as any).Promise = global.Promise;\n      return await mongoose.connect(\"mongodb+srv://rwadmin:6cfzUQv4jYcWsb7@cluster0-8wrsa.mongodb.net/test?retryWrites=true\");\n    }\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/security/security-utils.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PAYLOAD_COMPONENTS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n\n\n            \n        \n\n    src/module/post/schema/post.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PostSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema(\n  {\n    content: {\n      required: false,\n      type: String\n    },\n    title: {\n      required: true,\n      type: String,\n      unique: true\n    },\n    userId: {\n      ref: \"Article\",\n      required: true,\n      type: mongoose.SchemaTypes.ObjectId\n    }\n  },\n  {\n    timestamps: true\n  }\n)\n                        \n                    \n\n\n            \n        \n\n    src/module/post/post.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            postsProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    inject: [DB_PROVIDER],\n    provide: POST_MODEL_PROVIDER,\n    useFactory: (connection: Connection) => connection.model(\"Post\", PostSchema)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/module/product/schema/product.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProductSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema(\n  {\n    createdBy: {\n      required: true, // This shall refer to USER collection\n      type: String\n    },\n    description: {\n      type: String\n    },\n    isActive: {\n      default: false,\n      type: Boolean\n    },\n    isDeleted: {\n      default: false,\n      type: Boolean\n    },\n    masterProductId: {\n      type: { type: Schema.Types.ObjectId, ref: \"Product\" }\n    },\n    name: {\n      required: true,\n      type: String\n    },\n    productId: {\n      required: true,\n      type: String,\n      unique: true\n    },\n    productType: {\n      default: \"Soap\",\n      required: true,\n      type: String\n    },\n    type: {\n      required: true,\n      type: String\n    },\n    useTime: {\n      type: String\n    }\n  },\n  {\n    timestamps: true\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Schema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : mongoose.Schema\n                        \n                    \n\n\n            \n        \n\n    src/module/product/product.providers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Provider\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    inject: [DB_PROVIDER],\n    provide: PROJECT_MODEL_PROVIDER,\n    useFactory: (connection: Connection) => connection.model(\"Product\", ProductSchema)\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    src/module/article/article.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : lodash\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
